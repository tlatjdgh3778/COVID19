{"version":3,"sources":["style/global.js","components/SideBar/SideBarTitle/SideBarTitle.style.js","components/SideBar/SideBarTitle/SideBarTitle.jsx","components/SideBar/SideBarContent/SideBarContent.style.js","components/SideBar/SideBarContent/SideBarContent.jsx","components/SideBar/SideBarFooter/SideBarFooter.style.js","store/modules/mode.js","components/SideBar/SideBarFooter/SideBarFooter.jsx","components/SideBar/SideBarModal/SideBarModal.style.js","store/modules/menu.js","components/SideBar/SideBarModal/SideBarModal.jsx","components/SideBar/SideBar.style.js","components/SideBar/SideBar.jsx","components/Domestic/DomesticCityStatus/DomesticCityStatus.style.js","components/Domestic/DomesticCityStatus/DomesticCityStatus.jsx","style/Component.style.js","store/modules/state.js","components/Domestic/DomesticStatus/DomesticStatus.jsx","components/Map/Map.style.js","components/Map/Map.jsx","components/Loading/Loading.js","pages/Domestic/Domestic.jsx","components/World/WorldCountriesStatus/WorldCountriesStatus.style.js","components/World/WorldCountriesStatus/WorldCountriesStatus.jsx","components/World/WorldStatus/WorldStatus.jsx","components/World/WorldStatusChart/WorldStatusChart.style.js","components/World/WorldStatusChart/WorldStatusChart.jsx","pages/World/World.jsx","style/theme.js","store/modules/korea.js","utils/constant.js","store/modules/world.js","store/modules/worldDaily.js","App.js","store/modules/index.js","store/index.js","index.js"],"names":["GlobalStyle","createGlobalStyle","props","theme","color","fontColor","hoverColor","bgColor","wallpaperColor","SideBarTitleContainer","styled","div","fontSize","md","device","TabletPortrait","Title","SideBarTitle","SideBarContentContainer","MenuContainer","HomeIcon","Home","WorldIcon","World","SideBarContent","exact","to","SideBarFooterContainer","LightModeIcon","LightMode","iconColor","DarkModeIcon","DarkMode","GithubIcon","Github","GithubLink","withComponent","CHANGE_MODE","changeMode","type","initialState","isDark","SideBarFooter","useSelector","mode","dispatch","useDispatch","onClick","target","href","alt","Background","ModalContainer","MobileLandscape","CloseIcon","Close","DomesticStatus","News","Mode","GithubContainer","TOGGLE_MENU","toggleMenu","isOpen","SideBarModal","menu","e","stopPropagation","SideBarContainer","TabletLandscape","MenuIcon","Menu","SideBar","CityContainer","lg","TableContainer","TitleContainer","Content","css","TableTitle","sm","TableTitleCity","CityName","TotalCase","Recovered","Death","Percentage","DomesticCityStatus","cityData","korea","data","newData","Object","entries","slice","total","splice","length","map","i","countryName","totalCase","recovered","death","percentage","handleColor","confirmedColor","activedColor","recoveredColor","MainContainer","RightContainer","LeftContainer","StatusContainer","StatusTitle","container","TotalContainer","activeColor","confirmedHover","activedHover","recoveredHover","deathHover","handleActiveColor","handleHoverColor","ssm","Data","TodayData","CHANGE_STATE","changeState","state","payload","currentState","koreaData","currentTarget","childNodes","innerHTML","todayData","style","width","newCase","replace","name","Number","toLocaleString","MapContainerCustom","MapContainer","CityCaseContainer","CityCase","CityCaseStatus","UpdateTime","Map","useState","case","seoul","setName","parseInt","newTotalCase","newRecovered","newDeath","updateTime","start","end","duration","separator","zoom","center","GeoJSON","fillColor","weight","mapData","features","onEachFeature","city","layer","properties","CTP_ENG_NM","cityName","CTP_KOR_NM","on","click","setStyle","clickCity","mouseover","mouseout","Loading","height","timeout","position","top","left","transform","Domestic","loadingKorea","loading","loadingCity","WorldCountriesStatus","countriesData","world","countries","country","cases","deaths","casesPerOneMillion","WorldStatus","worldData","ChartStyle","chartColor","ChartTitle","options","plugins","title","display","text","legend","elements","point","radius","tooltips","intersect","scales","xAxes","gridLines","yAxes","ticks","callback","value","index","values","numeral","format","ChartContainer","CasesTitle","fontRed","RecoveredTitle","fontGreen","DeathsTitle","WorldStatusChart","dateLabels","casesData","deathsData","recoveredData","dailyData","worldDaily","daily","keys","casesChart","labels","datasets","label","fill","borderColor","recoveredChart","deathsChart","S","size","Laptops","xl","xxl","lightMode","highlightColor","chartConfirmed","chartRecovered","chartActived","darkMode","chartRed","FETCH_KOREA_REQUEST","FETCH_KOREA_SUCCESS","FETCH_KOREA_FAILURE","fetchKoreaRequest","fetchKoreaSuccess","fetchKoreaFailure","err","fetchKoreaData","axios","get","then","response","catch","message","FETCH_WORLD_REQUEST","FETCH_WORLD_SUCCESS","FETCH_WORLD_FAILURE","fetchWorldRequest","fetchWorldSuccess","fetchWorldFailure","fetchWorldData","FETCH_WORLD_DAILY_REQUEST","FETCH_WORLD_DAILY_SUCCESS","FETCH_WORLD_DAILY_FAILURE","fetchWorldDailyData","fetchWorldDailyFailure","AppStyle","App","useEffect","basename","path","component","combineReducers","action","produce","draft","middleware","thunk","logger","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3899a2f.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n// 변수명 앞에 두 개의 대시(--) 사용\n\nconst GlobalStyle = createGlobalStyle`\n* {\nfont-family: 'Noto Sans KR', 'Roboto', sans-serif;\nmargin: 0;\npadding: 0;\n\n    &::-webkit-scrollbar {\n        width: 8px;\n        height: 8px;\n    }\n    &::-webkit-scrollbar-thumb {\n    background-color:${(props) => props.theme.color.fontColor};\n    border-radius: 10px;\n    }\n    &::webkit-scrollbar-track {\n    background-color: ${(props) => props.theme.color.hoverColor};\n    border-radius: 10px;\n    }\n    &::-webkit-scrollbar-corner {\n        background-color: ${(props) => props.theme.color.bgColor};\n    }\n}\nbody {\n    box-sizing: border-box;\n    background-color: ${(props) => props.theme.color.wallpaperColor};\n    transition: all 0.5s;\n}\n\na {\n    text-decoration: none;\n    color: ${(props) => props.theme.color.fontColor};\n}\n\n.leaflet-container {\n    background-color: ${(props) => props.theme.color.bgColor};\n}\n\n.leaflet-control-zoom {\n    display: none;\n}\n.leaflet-control-attribution{\n    display: none\n}\n`;\n\n\nexport default GlobalStyle;","import styled from 'styled-components';\n\nconst SideBarTitleContainer = styled.div`\npadding: 2rem 1rem;\nfont-weight: 700; \nfont-size: ${(props) => props.theme.fontSize.md};\n\n    @media ${(props) => props.theme.device.TabletPortrait}{\n        padding: 0;\n        display: flex;\n    }\n`;\nconst Title = styled.div`\n    @media ${(props) => props.theme.device.TabletPortrait}{\n        padding: 0 0.25rem;\n    }\n`;\n\nexport { SideBarTitleContainer, Title };","import React from \"react\";\nimport * as S from \"./SideBarTitle.style\";\n\nconst SideBarTitle = () => {\n    return (\n        <>\n            <S.SideBarTitleContainer>\n                <S.Title>COVID 19 </S.Title>\n                <S.Title>TRACKER</S.Title>\n            </S.SideBarTitleContainer>\n        </>\n    );\n};\nexport default SideBarTitle;\n","import styled from \"styled-components\";\nimport { Home, World } from \"@styled-icons/boxicons-regular\";\n\nconst SideBarContentContainer = styled.div`\n    text-align: center;\n    width: 100%;\n\n    @media ${(props) => props.theme.device.TabletPortrait} {\n        display: none;\n    }\n`;\n\nconst MenuContainer = styled.div`\n    display: flex;\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n    margin: 1rem 0;\n    padding: 0.5rem 1rem;\n    &:hover {\n        background-color: ${(props) => props.theme.color.hoverColor};\n    }\n`;\nconst HomeIcon = styled(Home)`\n    margin-right: 0.5rem;\n    width: 2rem;\n`;\n\nconst WorldIcon = styled(World)`\n    margin-right: 0.5rem;\n    width: 2rem;\n`;\n\nexport { SideBarContentContainer, MenuContainer, HomeIcon, WorldIcon };\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport * as S from \"./SideBarContent.style\";\n\nconst SideBarContent = () => {\n    return (\n        <S.SideBarContentContainer>\n            <NavLink exact to=\"/\">\n                <S.MenuContainer>\n                    <S.HomeIcon />\n                    <div>국내 현황</div>\n                </S.MenuContainer>\n            </NavLink>\n            <NavLink to=\"/world\">\n                <S.MenuContainer>\n                    <S.WorldIcon />\n                    <div>세계 현황</div>\n                </S.MenuContainer>\n            </NavLink>\n        </S.SideBarContentContainer>\n    );\n};\n\nexport default SideBarContent;\n","import styled from 'styled-components';\nimport { Github } from '@styled-icons/boxicons-logos';\nimport { DarkMode, LightMode } from '@styled-icons/material-outlined';\n\nconst SideBarFooterContainer = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: space-around;\n    position: absolute;\n    bottom: 0;\n    margin-bottom: 1rem;\n\n    @media ${(props) => props.theme.device.TabletPortrait}{\n        display: none;\n    }\n`;\n\nconst LightModeIcon = styled(LightMode)`\ncolor: ${(props) => props.theme.color.iconColor};\nwidth: 3rem;\ncursor: pointer;\n`;\n\nconst DarkModeIcon = styled(DarkMode)`\ncolor: ${(props) => props.theme.color.fontColor};\nwidth: 3rem;\ncursor: pointer;\n`;\n\nconst GithubIcon = styled(Github)`\ncolor: ${(props) => props.theme.color.fontColor};\nwidth: 3rem;\ncursor: pointer;\n`;\nconst GithubLink = styled(GithubIcon.withComponent('a'))`\n`\n\nexport { SideBarFooterContainer, LightModeIcon, DarkModeIcon, GithubIcon, GithubLink };","// mode module\nimport produce from \"immer\";\n\n// actionTypes\nconst CHANGE_MODE = \"mode/CHANGE_MODE\";\n\n// action creator\nexport const changeMode = () => {\n    return {\n        type: CHANGE_MODE,\n    };\n};\n\n// reducer\nconst initialState = {\n    isDark: false,\n};\n\nexport default function reducer(state = initialState, action) {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case CHANGE_MODE:\n                draft.isDark = !draft.isDark;\n                break;\n            default:\n                break;\n        }\n    });\n}\n","import React from \"react\";\nimport * as S from \"./SideBarFooter.style\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeMode } from \"store/modules/mode\";\n\nconst SideBarFooter = () => {\n    const isDark = useSelector(({ mode }) => mode.isDark);\n    const dispatch = useDispatch();\n\n    return (\n        <S.SideBarFooterContainer>\n            <div onClick={() => dispatch(changeMode())}>\n                {isDark ? <S.LightModeIcon /> : <S.DarkModeIcon />}\n            </div>\n            <S.GithubLink\n                target=\"_blank\"\n                href=\"https://github.com/tlatjdgh3778/COVID19\"\n                alt=\"githubLink\"\n            >\n                <S.GithubIcon />\n            </S.GithubLink>\n        </S.SideBarFooterContainer>\n    );\n};\n\nexport default SideBarFooter;\n","import styled from 'styled-components';\nimport { Close } from '@styled-icons/evaicons-solid';\nimport { Github } from '@styled-icons/boxicons-logos';\n\nconst Background = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgb(0, 0, 0, 0.5);;\n    z-index: 1000;\n`;\n\nconst ModalContainer = styled.div`\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    max-height: 80%;\n    width: 20rem;\n    height: 80%;\n    padding: 16px;\n    background: ${(props) => props.theme.color.bgColor};\n    border-radius: 10px;\n    text-align: center;\n\n    @media ${(props) => props.theme.device.MobileLandscape}{\n        width: 90%;\n    }\n`;\n\nconst MenuContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\nheight: 80%;\npadding-top: 3rem;\n`;\n\nconst CloseIcon = styled(Close)`\nposition: absolute;\ntop: 0.5rem;\nright: 0.5rem;\nwidth: 2rem;\ncursor: pointer;\n`;\n\nconst DomesticStatus = styled.div`\npadding: 1rem 0;\ncursor: pointer;\nborder-radius: 10px;\n\n    &:hover {\n        background-color: ${(props) => props.theme.color.hoverColor};\n    }\n`;\n\nconst News = styled.div`\npadding: 1rem 0;\ncursor: pointer;\nborder-radius: 10px;\n\n    &:hover {\n        background-color: ${(props) => props.theme.color.hoverColor};\n    }\n`;\n\nconst Mode = styled.div`\npadding: 1rem 0;\ncursor: pointer;\nborder-radius: 10px;\n`;\n\nconst GithubContainer = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ncursor: pointer;\n`;\nconst GithubIcon = styled(Github)`\ncolor: ${(props) => props.theme.color.fontColor};\nwidth: 2rem;\nmargin-right: 0.5rem;\n\n`;\nconst GithubLink = styled(GithubContainer.withComponent('a'))`\n`;\n\nexport { Background, ModalContainer, MenuContainer, CloseIcon, DomesticStatus, News, Mode, GithubContainer, GithubIcon, GithubLink };","// menu module\nimport produce from \"immer\";\n\n// actionTypes\nconst TOGGLE_MENU = \"menu/TOGGLE_MENU\";\n\n// action creator\nexport const toggleMenu = () => {\n    return {\n        type: TOGGLE_MENU,\n    };\n};\n\n// reducer\nconst initialState = {\n    isOpen: false,\n};\n\nexport default function reducer(state = initialState, action) {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case TOGGLE_MENU:\n                draft.isOpen = !draft.isOpen;\n                break;\n            default:\n                break;\n        }\n    });\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport * as S from \"./SideBarModal.style\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeMode } from \"store/modules/mode\";\nimport { toggleMenu } from \"store/modules/menu\";\n\nconst SideBarModal = () => {\n    const isDark = useSelector(({ mode }) => mode.isDark);\n    const isOpen = useSelector(({ menu }) => menu.isOpen);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            {isOpen ? (\n                <S.Background onClick={() => dispatch(toggleMenu())}>\n                    <S.ModalContainer onClick={(e) => e.stopPropagation()}>\n                        <div>메뉴</div>\n                        <S.CloseIcon\n                            onClick={() => dispatch(toggleMenu())}\n                        ></S.CloseIcon>\n                        <S.MenuContainer>\n                            <NavLink exact to=\"/\">\n                                <S.DomesticStatus\n                                    onClick={() => dispatch(toggleMenu())}\n                                >\n                                    국내 현황\n                                </S.DomesticStatus>\n                            </NavLink>\n                            <NavLink exact to=\"/world\">\n                                <S.News onClick={() => dispatch(toggleMenu())}>\n                                    세계 현황\n                                </S.News>\n                            </NavLink>\n\n                            <div onClick={() => dispatch(changeMode())}>\n                                {isDark ? (\n                                    <S.Mode>라이트 모드</S.Mode>\n                                ) : (\n                                    <S.Mode>다크 모드</S.Mode>\n                                )}\n                            </div>\n\n                            <S.GithubLink\n                                target=\"_blank\"\n                                href=\"https://github.com/tlatjdgh3778/COVID19\"\n                                alt=\"githubLink\"\n                            >\n                                <S.GithubContainer>\n                                    <S.GithubIcon></S.GithubIcon>\n                                    <div>Github</div>\n                                </S.GithubContainer>\n                            </S.GithubLink>\n                        </S.MenuContainer>\n                    </S.ModalContainer>\n                </S.Background>\n            ) : null}\n        </>\n    );\n};\n\nexport default SideBarModal;\n","import styled from \"styled-components\";\nimport { Menu } from \"@styled-icons/evaicons-solid\";\n\nconst SideBarContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    background-color: ${(props) => props.theme.color.bgColor};\n    color: ${(props) => props.theme.color.fontColor};\n    height: 100%;\n    position: fixed;\n    min-width: 10rem;\n    align-items: center;\n\n    @media ${(props) => props.theme.device.TabletLandscape} {\n        align-items: center;\n        min-width: 8.5rem;\n    }\n    @media ${(props) => props.theme.device.TabletPortrait} {\n        align-items: center;\n        width: 100%;\n        position: absolute;\n        height: 4rem;\n        justify-content: center;\n    }\n`;\n\nconst MenuIcon = styled(Menu)`\n    display: none;\n\n    @media ${(props) => props.theme.device.TabletPortrait} {\n        position: absolute;\n        display: block;\n        width: 2rem;\n        top: 1rem;\n        right: 1rem;\n        cursor: pointer;\n    }\n`;\n\nexport { SideBarContainer, MenuIcon };\n","import React from \"react\";\nimport SideBarTitle from \"./SideBarTitle/SideBarTitle\";\nimport SideBarContent from \"./SideBarContent/SideBarContent\";\nimport SideBarFooter from \"./SideBarFooter/SideBarFooter\";\nimport SideBarModal from \"./SideBarModal/SideBarModal\";\nimport * as S from \"./SideBar.style\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleMenu } from \"store/modules/menu\";\n\nconst SideBar = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <S.SideBarContainer>\n            <SideBarTitle></SideBarTitle>\n            <SideBarContent></SideBarContent>\n            <SideBarFooter></SideBarFooter>\n            <S.MenuIcon onClick={() => dispatch(toggleMenu())}></S.MenuIcon>\n            <SideBarModal></SideBarModal>\n        </S.SideBarContainer>\n    );\n};\n\nexport default SideBar;\n","import styled, {css} from 'styled-components';\n\nconst CityContainer = styled.div`\n    margin: 1rem;\n    font-weight: 700;\n    font-size: ${(props) => props.theme.fontSize.lg};\n`;\n\nconst TableContainer = styled.div`\n    margin: 0 1rem;\n    display: flex;\n    flex-direction: column;\n    overflow-x: auto;\n`;\nconst TitleContainer = styled.div`\n    display: flex;\n`;\n\nconst Content = css`\n    text-align: center;\n    min-width: 6rem;\n    border-radius: 5px;\n    padding: 0.5rem; \n    margin-bottom: 0.25rem;\n    margin-right: 0.25rem;\n    cursor: default;\n    display: flex;\n    justify-content: flex-end;\n    align-items: flex-end;\n`;\n\nconst TableTitle = styled.div`\n    ${Content};\n    font-weight: 700;\n    font-size: ${(props) => props.theme.fontSize.sm};\n    border: none;\n    background-color: ${(props) => props.theme.color.bgColor};\n    justify-content: center;\n`;\n\nconst TableTitleCity = styled(TableTitle)`\n    position: sticky;\n    left: 0;\n    min-width: 4rem;\n    margin-bottom: 0.25rem;\n    margin-right: 0.25rem;\n`;\n\nconst CityName = styled.div`\n    ${Content}\n    background-color: ${(props) => props.theme.color.bgColor};\n    position: sticky;\n    left: 0;\n    min-width: 4rem;\n    justify-content: center;\n`;\n\nconst TotalCase = styled.div`\n    ${Content}\n    background-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\n`;\n\nconst Recovered = styled.div`\n    ${Content}\n    background-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\n`;\n\nconst Death = styled.div`\n    ${Content}\n    background-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\n`;\n\nconst Percentage = styled.div`\n    ${Content}\n    background-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\n`;\n\nexport { CityContainer, TableContainer, TitleContainer, Content, TableTitle, TableTitleCity, CityName, TotalCase, Recovered, Death, Percentage };","import React from \"react\";\nimport * as S from \"./DomesticCityStatus.style\";\nimport { useSelector } from \"react-redux\";\n\nconst DomesticCityStatus = () => {\n    const cityData = useSelector(({ korea }) => korea.cityData.data);\n\n    const newData = Object.entries(cityData).slice(2, 20);\n\n    const total = newData.splice(0, 1); // 합계\n    newData.splice(newData.length, 0, total[0]); // 표의 제일 밑으로 보내기\n\n    // arr.splice(to, 0, item[0]); item 을 to 위치로 이동.\n    // const arr = [...newData];\n    // const item = arr.splice(0, 1); //\n    // arr.splice(newData.length, 0, item[0]);\n    // console.log(arr);\n    return (\n        <>\n            <S.CityContainer>시 도 별 현황</S.CityContainer>\n            <S.TableContainer>\n                <S.TitleContainer>\n                    <S.TableTitleCity>지역</S.TableTitleCity>\n                    <S.TableTitle>확진자</S.TableTitle>\n                    <S.TableTitle>완치자</S.TableTitle>\n                    <S.TableTitle>사망자</S.TableTitle>\n                    <S.TableTitle>발생률</S.TableTitle>\n                </S.TitleContainer>\n                {newData.map((data, i) => {\n                    if (i % 2 === 0) {\n                        return (\n                            <S.TitleContainer key={i}>\n                                <S.CityName>{data[1].countryName}</S.CityName>\n                                <S.TotalCase>{data[1].totalCase}</S.TotalCase>\n                                <S.Recovered>{data[1].recovered}</S.Recovered>\n                                <S.Death>{data[1].death}</S.Death>\n                                <S.Percentage>\n                                    {data[1].percentage}\n                                </S.Percentage>\n                            </S.TitleContainer>\n                        );\n                    } else {\n                        return (\n                            <S.TitleContainer key={i}>\n                                <S.CityName>{data[1].countryName}</S.CityName>\n                                <S.TotalCase bgColor>\n                                    {data[1].totalCase}\n                                </S.TotalCase>\n                                <S.Recovered bgColor>\n                                    {data[1].recovered}\n                                </S.Recovered>\n                                <S.Death bgColor>{data[1].death}</S.Death>\n                                <S.Percentage bgColor>\n                                    {data[1].percentage}\n                                </S.Percentage>\n                            </S.TitleContainer>\n                        );\n                    }\n                })}\n            </S.TableContainer>\n        </>\n    );\n};\nexport default DomesticCityStatus;\n","import styled, { css } from \"styled-components\";\n\nconst handleColor = (props) => {\n    if (props.color === \"확진환자\") {\n        return props.theme.color.confirmedColor;\n    }\n    if (props.color === \"치료중\") {\n        return props.theme.color.activedColor;\n    }\n    if (props.color === \"격리해제\") {\n        return props.theme.color.recoveredColor;\n    }\n    if (props.color === \"사망자\") {\n        return props.theme.color.fontColor;\n    }\n};\n\nconst handleHoverColor = (props) => {\n    if (props.color === \"확진환자\") {\n        return props.theme.color.confirmedHover;\n    }\n    if (props.color === \"치료중\") {\n        return props.theme.color.activedHover;\n    }\n    if (props.color === \"격리해제\") {\n        return props.theme.color.recoveredHover;\n    }\n    if (props.color === \"사망자\") {\n        return props.theme.color.deathHover;\n    }\n};\n\nconst handleActiveColor = (props) => {\n    if (props.color === props.activeColor && props.activeColor === \"확진환자\") {\n        return props.theme.color.confirmedHover;\n    }\n    if (props.color === props.activeColor && props.activeColor === \"치료중\") {\n        return props.theme.color.activedHover;\n    }\n    if (props.color === props.activeColor && props.activeColor === \"격리해제\") {\n        return props.theme.color.recoveredHover;\n    }\n    if (props.color === props.activeColor && props.activeColor === \"사망자\") {\n        return props.theme.color.deathHover;\n    }\n};\n\nconst MainContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin-left: 11rem;\n    margin-right: 3rem;\n    padding-top: 5rem;\n    color: ${({ theme }) => theme.color.fontColor};\n\n    @media ${({ theme }) => theme.device.TabletLandscape} {\n        margin-left: 9rem;\n    }\n    @media ${({ theme }) => theme.device.TabletPortrait} {\n        display: flex;\n        flex-direction: column;\n        margin-left: 0;\n        margin-right: 0;\n        padding-top: 6rem;\n        width: 100%;\n        align-items: center;\n    }\n`;\n\nconst RightContainer = styled.div`\n    width: 37rem;\n    margin: 0 3rem;\n    color: ${({ theme }) => theme.color.fontColor};\n\n    @media ${({ theme }) => theme.device.TabletLandscape} {\n        margin: 1rem;\n    }\n    @media ${({ theme }) => theme.device.TabletPortrait} {\n        display: -webkit-flex;\n        display: flex;\n        flex-direction: column;\n        margin: 1rem 0;\n        width: 85%;\n    }\n`;\n\nconst LeftContainer = styled.div`\n    width: 37rem;\n    margin: 0 3rem;\n    color: ${({ theme }) => theme.color.fontColor};\n\n    @media ${({ theme }) => theme.device.TabletLandscape} {\n        margin: 1rem;\n    }\n    @media ${({ theme }) => theme.device.TabletPortrait} {\n        display: flex;\n        flex-direction: column;\n        margin: 0;\n        width: 85%;\n        /* min-width: 100%; */\n    }\n`;\n\nconst StatusContainer = styled.div`\n    display: flex;\n    margin: 0 1rem;\n    justify-content: space-around;\n`;\n\nconst StatusTitle = styled.div`\n    margin: 1rem;\n    padding-bottom: 1rem;\n    font-weight: 700;\n    font-size: ${({ theme }) => theme.fontSize.lg};\n    border-bottom: 1px solid ${({ theme }) => theme.color.fontColor};\n`;\nconst container = css`\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0.5rem 1rem;\n    height: 5rem;\n    justify-content: space-between;\n    cursor: default;\n\n    @media ${({ theme }) => theme.device.TabletPortrait} {\n        margin: 0;\n    }\n    @media ${({ theme }) => theme.device.MobileLandscape} {\n        width: 3rem;\n        height: 4rem;\n        padding: 0.25rem;\n    }\n`;\n\nconst TotalContainer = styled.div`\n    ${container};\n    background-color: ${(props) => handleActiveColor(props)};\n    cursor: pointer;\n    &:hover {\n        background-color: ${(props) => handleHoverColor(props)};\n    }\n`;\n\nconst Title = styled.div`\n    @media ${({ theme }) => theme.device.TabletPortrait} {\n        font-size: ${({ theme }) => theme.fontSize.ssm};\n    }\n`;\n\nconst Data = styled.div`\n    color: ${(props) => handleColor(props)};\n\n    font-size: ${({ theme }) => theme.fontSize.lg};\n    font-weight: 700;\n\n    @media ${({ theme }) => theme.device.TabletPortrait} {\n        font-size: ${({ theme }) => theme.fontSize.md};\n    }\n    @media ${({ theme }) => theme.device.MobileLandscape} {\n        font-size: ${({ theme }) => theme.fontSize.sm};\n    }\n`;\nconst TodayData = styled.div`\n    color: ${(props) => handleColor(props)};\n    display: flex;\n\n    @media ${({ theme }) => theme.device.TabletPortrait} {\n        font-size: ${({ theme }) => theme.fontSize.ssm};\n    }\n`;\n\nexport {\n    MainContainer,\n    RightContainer,\n    LeftContainer,\n    StatusContainer,\n    StatusTitle,\n    TotalContainer,\n    Title,\n    Data,\n    TodayData,\n};\n","// state module\nimport produce from \"immer\";\n\n// actionTypes\nconst CHANGE_STATE = \"state/CHANGE_STATE\";\n\n// action creator\nexport const changeState = (state) => {\n    return {\n        type: CHANGE_STATE,\n        payload: state,\n    };\n};\n\n// reducer\nconst initialState = {\n    currentState: \"확진환자\",\n};\n\nexport default function reducer(state = initialState, action) {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case CHANGE_STATE:\n                draft.currentState = action.payload;\n                break;\n            default:\n                break;\n        }\n    });\n}\n","import React from \"react\";\nimport * as GS from \"style/Component.style\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeState } from \"store/modules/state\";\n\nconst DomesticStatus = () => {\n    // 누적 확진자 : TotalCase, city_url.korea.newCase\n    // 격리해제(완치) : TotalRecovered, TodayRecovered\n    // 격리중(치료중) : NowCase, TotalCaseBefore\n    // 사망자 수 : TotalDeath, TodayDeath\n    const dispatch = useDispatch();\n    const names = [\"치료중\", \"격리해제\", \"사망자\"];\n    const koreaData = useSelector(({ korea }) => korea.koreaData.data);\n    const cityData = useSelector(({ korea }) => korea.cityData.data);\n    const currentState = useSelector(({ state }) => state.currentState);\n\n    const onClick = (e) => {\n        dispatch(changeState(e.currentTarget.childNodes[0].innerHTML));\n    };\n\n    const data = [\"NowCase\", \"TotalRecovered\", \"TotalDeath\"];\n    const todayData = [\"TotalCaseBefore\", \"TodayRecovered\", \"TodayDeath\"];\n\n    return (\n        <>\n            <GS.StatusTitle>국내현황</GS.StatusTitle>\n            <GS.StatusContainer>\n                <GS.TotalContainer\n                    onClick={onClick}\n                    color=\"확진환자\"\n                    activeColor={currentState}\n                    style={{ width: \"calc(25%)\" }}\n                >\n                    {\n                        <>\n                            <GS.Title>확진환자</GS.Title>\n                            <GS.Data color=\"확진환자\">\n                                {koreaData.TotalCase}\n                            </GS.Data>\n                            <GS.TodayData color=\"확진환자\">\n                                <div>\n                                    {cityData.korea.newCase.replace(\",\", \"\") > 0\n                                        ? \"+\"\n                                        : \"\"}\n                                </div>\n                                <div>{cityData.korea.newCase}</div>\n                            </GS.TodayData>\n                        </>\n                    }\n                </GS.TotalContainer>\n                {names.map((name, i) => {\n                    return (\n                        <GS.TotalContainer\n                            key={i}\n                            onClick={onClick}\n                            color={name}\n                            activeColor={currentState}\n                            style={{ width: \"calc(25%)\" }}\n                        >\n                            {\n                                <>\n                                    <GS.Title>{name}</GS.Title>\n                                    <GS.Data color={name}>\n                                        {koreaData[data[i]]}\n                                    </GS.Data>\n                                    <GS.TodayData color={name}>\n                                        <div>\n                                            {koreaData[todayData[i]] > 0\n                                                ? \"+\"\n                                                : \"\"}\n                                        </div>\n                                        <div>\n                                            {Number(\n                                                koreaData[todayData[i]]\n                                            ).toLocaleString()}\n                                        </div>\n                                    </GS.TodayData>\n                                </>\n                            }\n                        </GS.TotalContainer>\n                    );\n                })}\n            </GS.StatusContainer>\n        </>\n    );\n};\n\nexport default DomesticStatus;\n","import styled from \"styled-components\";\nimport { MapContainer } from \"react-leaflet\";\n\nconst handleColor = (props) => {\n    if (props.color === \"확진환자\") {\n        return props.theme.color.confirmedColor;\n    }\n    if (props.color === \"치료중\") {\n        return props.theme.color.activedColor;\n    }\n    if (props.color === \"격리해제\") {\n        return props.theme.color.recoveredColor;\n    }\n    if (props.color === \"사망자\") {\n        return props.theme.color.fontColor;\n    }\n};\n\nconst MapContainerCustom = styled(MapContainer)`\n    width: 35rem;\n    height: 70vh;\n\n    @media ${(props) => props.theme.device.TabletPortrait} {\n        width: 100%;\n    }\n`;\n\nconst CityName = styled.div`\n    margin: 1rem;\n    font-weight: 700;\n    font-size: ${(props) => props.theme.fontSize.lg};\n`;\nconst CityCaseContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 1rem;\n`;\nconst CityCase = styled.div`\n    font-weight: 700;\n    color: ${(props) => handleColor(props) || props.theme.color.confirmedColor};\n    font-size: ${(props) => props.theme.fontSize.lg};\n`;\nconst CityCaseStatus = styled.div``;\nconst UpdateTime = styled.div`\n    margin-left: 1rem;\n    margin-right: 1rem;\n    margin-bottom: 0.5rem;\n    font-size: ${(props) => props.theme.fontSize.ssm};\n`;\n\nexport {\n    MapContainerCustom,\n    CityName,\n    CityCaseContainer,\n    CityCase,\n    CityCaseStatus,\n    UpdateTime,\n};\n","import React, { useState } from \"react\";\nimport { GeoJSON } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport mapData from \"data/cities.json\";\nimport CountUp from \"react-countup\";\nimport * as S from \"./Map.style\";\nimport { useSelector } from \"react-redux\";\n\nconst Map = () => {\n    const koreaData = useSelector(({ korea }) => korea.koreaData.data);\n    const cityData = useSelector(({ korea }) => korea.cityData.data);\n    const currentState = useSelector(({ state }) => state.currentState);\n\n    const [name, setName] = useState({\n        name: \"서울\",\n        case: cityData.seoul.newCase,\n        totalCase: cityData.seoul.totalCase,\n        recovered: cityData.seoul.recovered,\n        death: cityData.seoul.death,\n    });\n\n    const clickCity = (e, target, cityName) => {\n        e.target.setStyle({ fillColor: \"red\" });\n\n        setName({\n            name: cityName,\n            case: cityData[`${target}`].newCase,\n            totalCase: cityData[`${target}`].totalCase,\n            recovered: cityData[`${target}`].recovered,\n            death: cityData[`${target}`].death,\n        });\n    };\n    const cityStyle = {\n        fillColor: \"#656f7d\",\n        color: \"#233044\",\n        weight: 3,\n    };\n\n    const onEachCity = (city, layer) => {\n        const target = city.properties.CTP_ENG_NM;\n        const cityName = city.properties.CTP_KOR_NM;\n        if (currentState === cityName) {\n        }\n        layer.on({\n            click: (e) => {\n                clickCity(e, target, cityName);\n            },\n            mouseover: (e) => {\n                e.target.setStyle({ fillColor: \"red\" });\n            },\n            mouseout: (e) => {\n                e.target.setStyle({ fillColor: \"#656f7d\" });\n            },\n        });\n    };\n\n    const newCase = parseInt(name.case.replace(/,/g, \"\"));\n\n    const newTotalCase = parseInt(name.totalCase.replace(/,/g, \"\"));\n    const newRecovered = parseInt(name.recovered.replace(/,/g, \"\"));\n    const newDeath = parseInt(name.death.replace(/,/g, \"\"));\n\n    return (\n        <>\n            <S.UpdateTime>{koreaData.updateTime}</S.UpdateTime>\n            <S.CityName>{name.name}</S.CityName>\n            <S.CityCaseContainer>\n                <S.CityCase>\n                    <CountUp\n                        start={0}\n                        end={newCase}\n                        duration={1.5}\n                        separator=\",\"\n                    ></CountUp>\n                </S.CityCase>\n                <S.CityCaseStatus>당일 확진환자 수</S.CityCaseStatus>\n            </S.CityCaseContainer>\n            <S.CityCaseContainer>\n                <S.CityCase color={currentState}>\n                    <CountUp\n                        start={0}\n                        end={\n                            currentState === \"확진환자\"\n                                ? newTotalCase\n                                : currentState === \"격리해제\"\n                                ? newRecovered\n                                : currentState === \"치료중\"\n                                ? 0\n                                : newDeath\n                        }\n                        duration={1.5}\n                        separator=\",\"\n                    ></CountUp>\n                </S.CityCase>\n                {currentState === \"치료중\" ? (\n                    <S.CityCaseStatus>\n                        {currentState} 수(치료중 수는 데이터가 제공되지\n                        않습니다.)\n                    </S.CityCaseStatus>\n                ) : (\n                    <S.CityCaseStatus>{currentState} 수</S.CityCaseStatus>\n                )}\n            </S.CityCaseContainer>\n            <S.MapContainerCustom zoom={6.5} center={[36, 128]}>\n                <GeoJSON\n                    style={cityStyle}\n                    data={mapData.features}\n                    onEachFeature={onEachCity}\n                />\n            </S.MapContainerCustom>\n        </>\n    );\n};\n\nexport default Map;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nconst Loading = () => {\n    return (\n        <Loader\n            type=\"Oval\"\n            color=\"#6c757d\"\n            height={50}\n            width={50}\n            timeout={3000}\n            style={{\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%,-50%)\",\n            }}\n        />\n    );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { DomesticStatus, DomesticCityStatus } from \"components/Domestic/index\";\nimport Map from \"components/Map/Map\";\nimport * as GS from \"style/Component.style\";\nimport Loading from \"components/Loading/Loading\";\nimport { useSelector } from \"react-redux\";\n\nconst Domestic = () => {\n    const loadingKorea = useSelector(({ korea }) => korea.koreaData.loading);\n    const loadingCity = useSelector(({ korea }) => korea.cityData.loading);\n\n    return (\n        <>\n            <GS.MainContainer>\n                {loadingKorea || loadingCity ? (\n                    <Loading />\n                ) : (\n                    <>\n                        <GS.LeftContainer>\n                            <DomesticStatus></DomesticStatus>\n                            <DomesticCityStatus></DomesticCityStatus>\n                        </GS.LeftContainer>\n                        <GS.RightContainer>\n                            <Map></Map>\n                        </GS.RightContainer>\n                    </>\n                )}\n            </GS.MainContainer>\n        </>\n    );\n};\n\nexport default Domestic;\n","import styled, { css } from \"styled-components\";\n\nconst CityContainer = styled.div`\n    margin: 1rem;\n    font-weight: 700;\n    font-size: ${(props) => props.theme.fontSize.lg};\n`;\n\nconst TableContainer = styled.div`\n    margin: 0 1rem;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    max-height: 110vh;\n`;\nconst TitleContainer = styled.div`\n    display: flex;\n`;\n\nconst Content = css`\n    text-align: center;\n    min-width: 6rem;\n    border-radius: 5px;\n    padding: 0.5rem;\n    margin-bottom: 0.25rem;\n    margin-right: 0.25rem;\n    cursor: default;\n    display: flex;\n    justify-content: flex-end;\n    align-items: flex-end;\n`;\n\nconst TableTitle = styled.div`\n    ${Content};\n    font-weight: 700;\n    font-size: ${(props) => props.theme.fontSize.sm};\n    border: none;\n    background-color: ${(props) => props.theme.color.bgColor};\n    align-items: center;\n    justify-content: center;\n`;\nconst TableTitleCity = styled(TableTitle)`\n    position: sticky;\n    left: 0;\n    margin-bottom: 0.25rem;\n    margin-right: 0.25rem;\n    max-width: 4rem;\n    justify-content: center;\n`;\nconst CityName = styled.div`\n    ${Content}\n    background-color: ${(props) => props.theme.color.bgColor};\n    position: sticky;\n    left: 0;\n    max-width: 4rem;\n    justify-content: center;\n`;\nconst TotalCase = styled.div`\n    ${Content}\n    background-color: ${(props) =>\n        props.bgColor\n            ? props.theme.color.bgColor\n            : props.theme.color.wallpaperColor};\n`;\nconst Recovered = styled.div`\n    ${Content}\n    background-color: ${(props) =>\n        props.bgColor\n            ? props.theme.color.bgColor\n            : props.theme.color.wallpaperColor};\n`;\nconst Death = styled.div`\n    ${Content}\n    background-color: ${(props) =>\n        props.bgColor\n            ? props.theme.color.bgColor\n            : props.theme.color.wallpaperColor};\n`;\nconst Percentage = styled.div`\n    ${Content}\n    background-color: ${(props) =>\n        props.bgColor\n            ? props.theme.color.bgColor\n            : props.theme.color.wallpaperColor};\n`;\n\nexport {\n    CityContainer,\n    TableContainer,\n    TitleContainer,\n    Content,\n    TableTitle,\n    TableTitleCity,\n    CityName,\n    TotalCase,\n    Recovered,\n    Death,\n    Percentage,\n};\n","import React from \"react\";\nimport * as S from \"./WorldCountriesStatus.style\";\nimport { useSelector } from \"react-redux\";\n\nconst WorldCountriesStatus = () => {\n    const countriesData = useSelector(({ world }) => world.countriesData.data);\n    const countries = Object.entries(countriesData);\n\n    return (\n        <>\n            <S.CityContainer>나라 별 현황</S.CityContainer>\n            <S.TableContainer>\n                <S.TitleContainer>\n                    <S.TableTitleCity>지역</S.TableTitleCity>\n                    <S.TableTitle>완치자</S.TableTitle>\n                    <S.TableTitle>사망자</S.TableTitle>\n                    <S.TableTitle>확진자</S.TableTitle>\n                    <S.TableTitle>백만 명당</S.TableTitle>\n                </S.TitleContainer>\n                {countries.map((data, i) => {\n                    if (i % 2 === 0) {\n                        return (\n                            <S.TitleContainer key={i}>\n                                <S.CityName>{data[1].country}</S.CityName>\n                                <S.TotalCase>\n                                    {data[1].cases.toLocaleString()}\n                                </S.TotalCase>\n                                <S.Recovered>\n                                    {data[1].recovered.toLocaleString()}\n                                </S.Recovered>\n                                <S.Death>\n                                    {data[1].deaths.toLocaleString()}\n                                </S.Death>\n                                <S.Percentage>\n                                    {data[1].casesPerOneMillion.toLocaleString()}\n                                </S.Percentage>\n                            </S.TitleContainer>\n                        );\n                    } else {\n                        return (\n                            <S.TitleContainer key={i}>\n                                <S.CityName>{data[1].country}</S.CityName>\n                                <S.TotalCase bgColor>\n                                    {data[1].cases.toLocaleString()}\n                                </S.TotalCase>\n                                <S.Recovered bgColor>\n                                    {data[1].recovered.toLocaleString()}\n                                </S.Recovered>\n                                <S.Death bgColor>\n                                    {data[1].deaths.toLocaleString()}\n                                </S.Death>\n                                <S.Percentage bgColor>\n                                    {data[1].casesPerOneMillion.toLocaleString()}\n                                </S.Percentage>\n                            </S.TitleContainer>\n                        );\n                    }\n                })}\n            </S.TableContainer>\n        </>\n    );\n};\nexport default WorldCountriesStatus;\n","import React from \"react\";\nimport * as GS from \"style/Component.style\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeState } from \"store/modules/state\";\n\nconst WorldStatus = () => {\n    const dispatch = useDispatch();\n    const worldData = useSelector(({ world }) => world.worldData.data);\n    const currentState = useSelector(({ state }) => state.currentState);\n\n    const names = [\"확진환자\", \"격리해제\", \"사망자\"];\n    const data = [\"cases\", \"recovered\", \"deaths\"];\n    const todayData = [\"todayCases\", \"todayRecovered\", \"todayDeaths\"];\n\n    const onClick = (e) => {\n        dispatch(changeState(e.currentTarget.childNodes[0].innerHTML));\n    };\n\n    return (\n        <>\n            <GS.StatusTitle>세계현황</GS.StatusTitle>\n            <GS.StatusContainer>\n                {names.map((name, i) => {\n                    return (\n                        <GS.TotalContainer\n                            onClick={onClick}\n                            key={i}\n                            color={name}\n                            activeColor={currentState}\n                            style={{ width: \"calc(33%)\" }}\n                        >\n                            <GS.Title>{name}</GS.Title>\n                            <>\n                                <GS.Data color={name}>\n                                    {worldData[data[i]].toLocaleString()}\n                                </GS.Data>\n                                <GS.TodayData color={name}>\n                                    <div>\n                                        {worldData[data[i]] > 0 ? \"+\" : \"\"}\n                                    </div>\n                                    <div>\n                                        {worldData[\n                                            todayData[i]\n                                        ].toLocaleString()}\n                                    </div>\n                                </GS.TodayData>\n                            </>\n                        </GS.TotalContainer>\n                    );\n                })}\n            </GS.StatusContainer>\n        </>\n    );\n};\n\nexport default WorldStatus;\n","import styled, { css } from \"styled-components\";\nimport numeral from \"numeral\";\n\nconst ChartStyle = css`\n    border-radius: 10px;\n    margin: 1rem 0;\n    padding: 0.5rem 0;\n    background-color: ${(props) => props.theme.color.chartColor};\n`;\nconst ChartTitle = css`\n    margin: 0.5rem;\n    font-weight: 700;\n    text-align: center;\n`;\n\nconst options = {\n    plugins: {\n        title: {\n            display: true,\n            text: \"Custom Chart Title\",\n        },\n    },\n    legend: {\n        display: false,\n    },\n    elements: {\n        point: {\n            radius: 0,\n        },\n    },\n\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n    },\n    scales: {\n        xAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n            },\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    callback: function (value, index, values) {\n                        return numeral(value).format(\"0a\");\n                    },\n                },\n            },\n        ],\n    },\n};\nconst ChartContainer = styled.div`\n    ${ChartStyle};\n`;\nconst CasesTitle = styled.div`\n    ${ChartTitle}\n    color: ${(props) => props.theme.color.fontRed};\n`;\nconst RecoveredTitle = styled.div`\n    ${ChartTitle}\n    color: ${(props) => props.theme.color.fontGreen};\n`;\nconst DeathsTitle = styled.div`\n    ${ChartTitle}\n    color: ${(props) => props.theme.color.fontColor};\n`;\n\nconst Title = styled.div`\n    margin: 1rem;\n    padding-bottom: 1rem;\n    font-weight: 700;\n    font-size: ${(props) => props.theme.fontSize.lg};\n`;\n\nexport {\n    ChartStyle,\n    ChartTitle,\n    options,\n    ChartContainer,\n    CasesTitle,\n    RecoveredTitle,\n    DeathsTitle,\n    Title,\n};\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport * as S from \"./WorldStatusChart.style\";\nimport { useSelector } from \"react-redux\";\n\nconst WorldStatusChart = () => {\n    const dailyData = useSelector(\n        ({ worldDaily }) => worldDaily.dailyData.data\n    );\n\n    const daily = Object.entries(dailyData);\n\n    let dateLabels;\n    let casesData;\n    let deathsData;\n    let recoveredData;\n\n    if (daily.length !== 0) {\n        dateLabels = Object.keys(daily[0][1]);\n        casesData = Object.values(daily[0][1]);\n        deathsData = Object.values(daily[1][1]);\n        recoveredData = Object.values(daily[2][1]);\n    }\n    const casesChart = {\n        labels: dateLabels,\n        datasets: [\n            {\n                label: \"확진자 수\",\n                data: casesData,\n                fill: false,\n                borderColor: \"#df0736\",\n            },\n        ],\n    };\n    const recoveredChart = {\n        labels: dateLabels,\n        datasets: [\n            {\n                label: \"격리해제자 수\",\n                data: recoveredData,\n                fill: false,\n                borderColor: \"#27a643\",\n            },\n        ],\n    };\n    const deathsChart = {\n        labels: dateLabels,\n        datasets: [\n            {\n                label: \"사망자 수\",\n                data: deathsData,\n                fill: false,\n                borderColor: \"#373737\",\n            },\n        ],\n    };\n\n    return (\n        <>\n            <S.Title>전 세계 코로나 차트</S.Title>\n            <S.ChartContainer>\n                <S.CasesTitle>확진자 수</S.CasesTitle>\n                <Line data={casesChart} options={S.options}></Line>\n            </S.ChartContainer>\n            <S.ChartContainer>\n                <S.RecoveredTitle>완치자 수</S.RecoveredTitle>\n                <Line data={recoveredChart} options={S.options}></Line>\n            </S.ChartContainer>\n            <S.ChartContainer>\n                <S.DeathsTitle>사망자 수</S.DeathsTitle>\n                <Line data={deathsChart} options={S.options}></Line>\n            </S.ChartContainer>\n        </>\n    );\n};\n\nexport default WorldStatusChart;\n","import React from \"react\";\nimport {\n    WorldStatus,\n    WorldStatusChart,\n    WorldCountriesStatus,\n} from \"components/World/index\";\n\nimport * as GS from \"style/Component.style\";\n\nconst World = () => {\n    return (\n        <>\n            <GS.MainContainer>\n                <GS.LeftContainer>\n                    <WorldStatus />\n                    <WorldCountriesStatus></WorldCountriesStatus>\n                </GS.LeftContainer>\n                <GS.RightContainer>\n                    <WorldStatusChart />\n                </GS.RightContainer>\n            </GS.MainContainer>\n        </>\n    );\n};\n\nexport default World;\n","const size = {\n    MobileLandscape: \"480px\",\n    TabletPortrait: \"768px\",\n    TabletLandscape: \"992px\",\n    Laptops: \"1200px\",\n};\n\nconst device = {\n    MobileLandscape: `(max-width: ${size.MobileLandscape})`,\n    TabletPortrait: `(max-width: ${size.TabletPortrait})`,\n    TabletLandscape: `(max-width: ${size.TabletLandscape})`,\n    Laptops: `(max-width: ${size.Laptops})`,\n};\n\nconst fontSize = {\n    ssm: \"0.5rem\",\n    sm: \"0.7rem\",\n    md: \"1rem\",\n    lg: \"1.2rem\",\n    xl: \"1.5rem\",\n    xxl: \"2rem\",\n};\n\nconst lightMode = {\n    color: {\n        wallpaperColor: \"#ffffff\",\n        bgColor: \"#f8f5fa\",\n        fontColor: \"#373737\",\n\n        highlightColor: \"#c2b7da\",\n        hoverColor: \"#f5f5f5\",\n\n        chartConfirmed: \"#ffe1e6\",\n        chartRecovered: \"#e4f4e7\",\n        chartActived: \"#dfeeff\",\n        chartColor: \"#f6f6f7\",\n\n        iconColor: \"#373737\",\n\n        confirmedColor: \"#df0736\",\n        recoveredColor: \"#27a643\",\n        activedColor: \"#0562cb\",\n\n        confirmedHover: \"#ffe1e6\",\n        recoveredHover: \"#e4f4e7\",\n        activedHover: \"#dfeeff\",\n        deathHover: \"#f6f6f7\",\n    },\n    fontSize,\n    device,\n};\nconst darkMode = {\n    color: {\n        wallpaperColor: \"#1b2635\",\n        bgColor: \"#233044\",\n        fontColor: \"#6c757d\",\n\n        highlightColor: \"#2c1952\",\n        hoverColor: \"#152338\",\n\n        chartConfirmed: \"#ffe1e6\",\n        chartRecovered: \"#e4f4e7\",\n        chartActived: \"#dfeeff\",\n        chartColor: \"#191928\",\n        chartRed: \"#331327\",\n\n        iconColor: \"#ffc107\",\n\n        confirmedColor: \"#df0736\",\n        recoveredColor: \"#27a643\",\n        activedColor: \"#0562cb\",\n\n        confirmedHover: \"#331327\",\n        recoveredHover: \"#172827\",\n        activedHover: \"#132240\",\n        deathHover: \"#202230\",\n    },\n    fontSize,\n    device,\n};\n\nconst theme = {\n    lightMode,\n    darkMode,\n};\n\nexport default theme;\n","// korea Data module\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport { koreaUrl, cityUrl } from \"utils/constant\";\n\n// actionTypes\nconst FETCH_KOREA_REQUEST = \"korea/FETCH_KOREA_REQUEST\";\nconst FETCH_KOREA_SUCCESS = \"korea/FETCH_KOREA_SUCCESS\";\nconst FETCH_KOREA_FAILURE = \"korea/FETCH_KOREA_FAILURE\";\n\n// action creator\nexport const fetchKoreaRequest = (value) => {\n    return {\n        type: FETCH_KOREA_REQUEST,\n        value,\n    };\n};\n\nexport const fetchKoreaSuccess = (data, value) => {\n    return {\n        type: FETCH_KOREA_SUCCESS,\n        payload: data,\n        value,\n    };\n};\n\nexport const fetchKoreaFailure = (err, value) => {\n    return {\n        type: FETCH_KOREA_FAILURE,\n        payload: err,\n        value,\n    };\n};\nconst fetchKoreaCityData = () => {\n    return (dispatch) => {\n        dispatch(fetchKoreaRequest(\"city\"));\n        axios\n            .get(cityUrl)\n            .then((response) => {\n                dispatch(fetchKoreaSuccess(response.data, \"city\"));\n            })\n            .catch((err) => {\n                dispatch(fetchKoreaFailure(err.message, \"city\"));\n            });\n    };\n};\n\nexport const fetchKoreaData = () => {\n    return (dispatch) => {\n        dispatch(fetchKoreaCityData());\n        dispatch(fetchKoreaRequest(\"korea\"));\n        axios\n            .get(koreaUrl)\n            .then((response) => {\n                dispatch(fetchKoreaSuccess(response.data, \"korea\"));\n            })\n            .catch((err) => {\n                dispatch(fetchKoreaFailure(err.message, \"korea\"));\n            });\n    };\n};\n\n// reducer\nconst initialState = {\n    koreaData: {\n        loading: true,\n        err: \"\",\n        data: [],\n    },\n    cityData: {\n        loading: true,\n        err: \"\",\n        data: [],\n    },\n};\n\nexport default function reducer(state = initialState, action) {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case FETCH_KOREA_REQUEST:\n                if (action.value === \"korea\") {\n                    draft.koreaData.loading = true;\n                    break;\n                } else {\n                    draft.cityData.loading = true;\n                    break;\n                }\n            case FETCH_KOREA_SUCCESS:\n                if (action.value === \"korea\") {\n                    draft.koreaData.loading = false;\n                    draft.koreaData.data = action.payload;\n                    break;\n                } else {\n                    draft.cityData.loading = false;\n                    draft.cityData.data = action.payload;\n                    break;\n                }\n            case FETCH_KOREA_FAILURE:\n                if (action.value === \"korea\") {\n                    draft.koreaData.loading = false;\n                    draft.koreaData.data = [];\n                    draft.koreaData.err = action.payload;\n                    break;\n                } else {\n                    draft.cityData.loading = false;\n                    draft.cityData.data = [];\n                    draft.cityData.err = action.payload;\n                    break;\n                }\n            default:\n                break;\n        }\n    });\n}\n","// const API_KEY = process.env.REACT_APP_API_KEY;\n\nexport const koreaUrl = `https://api.corona-19.kr/korea/?serviceKey=RNZOsrb1kf6D89weJtm74ABhzSjcMI2Ku`;\nexport const cityUrl = `https://api.corona-19.kr/korea/country/new/?serviceKey=RNZOsrb1kf6D89weJtm74ABhzSjcMI2Ku`;\nexport const worldUrl = \"https://disease.sh/v3/covid-19/all\";\nexport const countriesUrl = \"https://disease.sh/v3/covid-19/countries\";\nexport const worldDaily = \"https://disease.sh/v3/covid-19/historical/all?lastdays=90\";\n","// world module\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport { worldUrl, countriesUrl } from \"utils/constant\";\n\n// actionTypes\nconst FETCH_WORLD_REQUEST = \"world/FETCH_WORLD_REQUEST\";\nconst FETCH_WORLD_SUCCESS = \"world/FETCH_WORLD_SUCCESS\";\nconst FETCH_WORLD_FAILURE = \"world/FETCH_WORLD_FAILURE\";\n\n// action creator\nexport const fetchWorldRequest = (value) => {\n    return {\n        type: FETCH_WORLD_REQUEST,\n        value,\n    };\n};\n\nexport const fetchWorldSuccess = (data, value) => {\n    return {\n        type: FETCH_WORLD_SUCCESS,\n        payload: data,\n        value,\n    };\n};\n\nexport const fetchWorldFailure = (err, value) => {\n    return {\n        type: FETCH_WORLD_FAILURE,\n        payload: err,\n        value,\n    };\n};\n\nexport const fetchWorldCountriesData = () => {\n    return (dispatch) => {\n        dispatch(fetchWorldRequest(\"countries\"));\n        axios\n            .get(countriesUrl)\n            .then((response) => {\n                dispatch(fetchWorldSuccess(response.data, \"countries\"));\n            })\n            .catch((err) => {\n                dispatch(fetchWorldFailure(err.message, \"countries\"));\n            });\n    };\n};\n\nexport const fetchWorldData = () => {\n    return (dispatch) => {\n        dispatch(fetchWorldCountriesData());\n        dispatch(fetchWorldRequest(\"world\"));\n        axios\n            .get(worldUrl)\n            .then((response) => {\n                dispatch(fetchWorldSuccess(response.data, \"world\"));\n            })\n            .catch((err) => {\n                dispatch(fetchWorldFailure(err.message, \"world\"));\n            });\n    };\n};\n\n// reducer\nconst initialState = {\n    worldData: {\n        loading: true,\n        err: \"\",\n        data: [],\n    },\n    countriesData: {\n        loading: true,\n        err: \"\",\n        data: [],\n    },\n};\n\nexport default function reducer(state = initialState, action) {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case FETCH_WORLD_REQUEST:\n                if (action.value === \"world\") {\n                    draft.worldData.loading = true;\n                    break;\n                } else {\n                    draft.countriesData.loading = true;\n                    break;\n                }\n            case FETCH_WORLD_SUCCESS:\n                if (action.value === \"world\") {\n                    draft.worldData.loading = false;\n                    draft.worldData.data = action.payload;\n                    break;\n                } else {\n                    draft.countriesData.loading = false;\n                    draft.countriesData.data = action.payload;\n                    break;\n                }\n            case FETCH_WORLD_FAILURE:\n                if (action.value === \"world\") {\n                    draft.worldData.loading = false;\n                    draft.worldData.data = [];\n                    draft.worldData.err = action.payload;\n                    break;\n                } else {\n                    draft.countriesData.loading = false;\n                    draft.countriesData.data = [];\n                    draft.countriesData.err = action.payload;\n                    break;\n                }\n            default:\n                break;\n        }\n    });\n}\n","// worldDaily module\nimport axios from \"axios\";\nimport produce from \"immer\";\nimport { worldDaily } from \"utils/constant\";\n\n// actionTypes\nconst FETCH_WORLD_DAILY_REQUEST = \"worldDaily/FETCH_WORLD_DAILY_REQUEST\";\nconst FETCH_WORLD_DAILY_SUCCESS = \"worldDaily/FETCH_WORLD_DAILY_SUCCESS\";\nconst FETCH_WORLD_DAILY_FAILURE = \"worldDaily/FETCH_WORLD_DAILY_FAILURE\";\n\n// action creator\nexport const fetchWorldDailyRequest = () => {\n    return {\n        type: FETCH_WORLD_DAILY_REQUEST,\n    };\n};\n\nexport const fetchWorldDailySuccess = (data) => {\n    return {\n        type: FETCH_WORLD_DAILY_SUCCESS,\n        payload: data,\n    };\n};\n\nexport const fetchWorldDailyFailure = (err) => {\n    return {\n        type: FETCH_WORLD_DAILY_FAILURE,\n        payload: err,\n    };\n};\n\nexport const fetchWorldDailyData = () => {\n    return (dispatch) => {\n        dispatch(fetchWorldDailyRequest());\n        axios\n            .get(worldDaily)\n            .then((response) => {\n                dispatch(fetchWorldDailySuccess(response.data));\n            })\n            .catch((err) => {\n                dispatch(fetchWorldDailyFailure(err.message));\n            });\n    };\n};\n\n// reducer\nconst initialState = {\n    dailyData: {\n        loading: false,\n        data: [],\n        err: \"\",\n    },\n};\n\nexport default function reducer(state = initialState, action) {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case FETCH_WORLD_DAILY_REQUEST:\n                draft.dailyData.loading = true;\n                break;\n            case FETCH_WORLD_DAILY_SUCCESS:\n                draft.dailyData.loading = false;\n                draft.dailyData.data = action.payload;\n                break;\n            case FETCH_WORLD_DAILY_FAILURE:\n                draft.dailyData = false;\n                draft.data = [];\n                draft.err = action.payload;\n                break;\n            default:\n                break;\n        }\n    });\n}\n","import React, { useEffect } from \"react\";\nimport GlobalStyle from \"style/global\";\nimport SideBar from \"components/SideBar/SideBar\";\nimport { World, Domestic } from \"pages/index\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport theme from \"style/theme\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchKoreaData } from \"store/modules/korea\";\nimport { fetchWorldData } from \"store/modules/world\";\nimport { fetchWorldDailyData } from \"store/modules/worldDaily\";\n\nconst AppStyle = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    @media ${(props) => props.theme.device.TabletPortrait} {\n        width: 100%;\n    }\n`;\n// 누적 확진자 : TotalCase, city_url.korea.newCase\n// 격리해제(완치) : TotalRecovered, TodayRecovered\n// 격리중(치료중) : NowCase, TotalCaseBefore\n// 사망자 수 : TotalDeath, TodayDeath\nconst App = () => {\n    const dispatch = useDispatch();\n    const isDark = useSelector(({ mode }) => mode.isDark);\n\n    useEffect(() => {\n        dispatch(fetchKoreaData());\n        dispatch(fetchWorldData());\n        dispatch(fetchWorldDailyData());\n    }, [dispatch]);\n\n    return (\n        <>\n            <Router basename=\"/covid19\">\n                <ThemeProvider theme={isDark ? theme.darkMode : theme.lightMode}>\n                    <GlobalStyle />\n                    <AppStyle>\n                        <SideBar></SideBar>\n                        <Switch>\n                            <Route exact path=\"/\" component={Domestic}></Route>\n                            <Route exact path=\"/world\" component={World}></Route>\n                        </Switch>\n                    </AppStyle>\n                </ThemeProvider>\n            </Router>\n        </>\n    );\n};\n\nexport default App;\n","// rootReducer\nimport { combineReducers } from \"redux\";\nimport mode from \"./mode\";\nimport menu from \"./menu\";\nimport korea from \"./korea\";\nimport world from \"./world\";\nimport state from \"./state\";\nimport worldDaily from \"./worldDaily\";\n\nexport default combineReducers({\n    mode,\n    menu,\n    korea,\n    world,\n    state,\n    worldDaily,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./modules\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nconst middleware = [thunk, logger];\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}