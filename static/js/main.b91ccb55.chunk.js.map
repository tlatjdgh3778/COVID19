{"version":3,"sources":["style/global.js","components/SideBar/SideBarTitle/SideBarTitle.style.js","components/SideBar/SideBarTitle/SideBarTitle.jsx","components/SideBar/SideBarContent/SideBarContent.style.js","components/SideBar/SideBarContent/SideBarContent.jsx","components/SideBar/SideBarFooter/SideBarFooter.style.js","components/SideBar/SideBarFooter/SideBarFooter.jsx","components/SideBar/SideBarModal/SideBarModal.style.js","components/SideBar/SideBarModal/SideBarModal.jsx","components/SideBar/SideBar.style.js","components/SideBar/SideBar.jsx","components/Domestic/DomesticCityStatus/DomesticCityStatus.style.js","components/Domestic/DomesticCityStatus/DomesticCityStatus.jsx","components/Domestic/DomesticStatus/DomesticStatus.style.js","components/Domestic/DomesticStatus/DomesticStatus.jsx","components/Map/Map.style.js","components/Map/Map.jsx","style/Component.style.js","pages/Domestic/Domestic.jsx","components/World/Countries/Countries.style.js","components/World/Countries/Countries.jsx","components/World/WorldStatus/WorldStatus.style.js","components/World/WorldStatus/WorldStatus.jsx","components/World/WorldStatusChart/WorldStatusChart.style.js","components/World/WorldStatusChart/WorldStatusChart.jsx","pages/World/World.jsx","style/theme.js","utils/constant.js","apis/getCovidData.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","props","theme","color","fontColor","hoverColor","bgColor","wallpaperColor","SideBarTitleContainer","styled","div","fontSize","md","device","TabletPortrait","Title","SideBarTitle","SideBarContentContainer","DomesticContainer","DomesticStatus","HomeIcon","Home","WorldContainer","WorldStatus","WorldIcon","World","SideBarContent","exact","to","SideBarFooterContainer","LightModeIcon","LightMode","iconColor","DarkModeIcon","DarkMode","GithubIcon","Github","GithubLink","withComponent","SideBarFooter","changeTheme","isDark","onClick","target","href","alt","Background","ModalContainer","MobileLandscape","MenuContainer","CloseIcon","Close","News","Mode","GithubContainer","SideBarModal","showModal","closeModal","e","stopPropagation","SideBarContainer","TabletLandscape","MenuIcon","Menu","SideBar","useState","setShowModal","CityContainer","lg","TableContainer","TitleContainer","Content","css","TableTitle","sm","TableTitleCity","CityName","TotalCase","Recovered","Death","Percentage","DomesticCityStatus","cityData","ew","Object","entries","map","data","i","countryName","totalCase","recovered","death","percentage","DomesticStatusTitle","DomesticStatusContainer","container","TotalContainer","ssm","Data","TodayData","koreaData","name","korea","newCase","NowCase","TotalCaseBefore","TotalRecovered","TodayRecovered","TotalDeath","TodayDeath","MapContainerCustom","MapContainer","cityStyle","fillColor","weight","CityCaseContainer","CityCase","fontRed","CityCaseStatus","UpdateTime","Map","case","seoul","setName","parseInt","replace","newTotalCase","updateTime","start","end","duration","separator","zoom","center","GeoJSON","style","S","mapData","features","onEachFeature","city","layer","cityName","properties","CTP_ENG_NM","on","click","setStyle","incheon","gyeonggi","gangwon","chungbuk","chungnam","daejeon","sejong","jeonnam","jeonbuk","gwangju","gyeongbuk","daegu","ulsan","busan","gyeongnam","jeju","mouseover","mouseout","MainContainer","RightContainer","LeftContainer","Domestic","Countries","countriesData","countries","country","cases","toLocaleString","deaths","casesPerOneMillion","WorldDataContainer","worldData","confirmed","ChartStyle","ChartTitle","options","plugins","title","display","text","legend","elements","point","radius","tooltips","mode","intersect","scales","xAxes","gridLines","yAxes","ticks","callback","value","index","values","numeral","format","CasesChartContainer","chartRed","RecoveredChartContainer","chartGreen","DeathsChartContainer","chartColor","CasesTitle","RecoveredTitle","fontGreen","DeathsTitle","WorldStatusChart","dateLabels","casesData","deathsData","recoveredData","dailyData","setDailyData","useEffect","a","fetch","res","json","res_data","getData","console","log","keys","length","casesChart","labels","datasets","label","fill","borderColor","recoveredChart","deathsChart","world","size","Laptops","xl","xxl","lightMode","fontBlue","highlightColor","darkMode","API_KEY","process","koreaUrl","getKoreaData","koreaResponse","getCityData","cityResponse","getWorldData","worldResponse","getCountriesData","countriesResponse","AppStyle","App","setIsDark","isLoading","setIsLoading","setData","setWorld","basename","type","height","width","timeout","position","top","left","transform","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b91ccb55.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n// 변수명 앞에 두 개의 대시(--) 사용\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\nfont-family: 'Noto Sans KR', 'Roboto', sans-serif;\r\nmargin: 0;\r\npadding: 0;\r\n\r\n    &::-webkit-scrollbar {\r\n        width: 8px;\r\n        height: 8px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n    background-color:${(props) => props.theme.color.fontColor};\r\n    border-radius: 10px;\r\n    }\r\n    &::webkit-scrollbar-track {\r\n    background-color: ${(props) => props.theme.color.hoverColor};\r\n    border-radius: 10px;\r\n    }\r\n    &::-webkit-scrollbar-corner {\r\n        background-color: ${(props) => props.theme.color.bgColor};\r\n    }\r\n}\r\nbody {\r\n    box-sizing: border-box;\r\n    background-color: ${(props) => props.theme.color.wallpaperColor};\r\n    transition: all 0.5s;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    color: ${(props) => props.theme.color.fontColor};\r\n}\r\n\r\n.leaflet-container {\r\n    background-color: ${(props) => props.theme.color.bgColor};\r\n}\r\n\r\n.leaflet-control-zoom {\r\n    display: none;\r\n}\r\n.leaflet-control-attribution{\r\n    display: none\r\n}\r\n`;\r\n\r\n\r\nexport default GlobalStyle;","import styled from 'styled-components';\r\n\r\nconst SideBarTitleContainer = styled.div`\r\npadding: 2rem 1rem;\r\nfont-weight: 700; \r\nfont-size: ${(props) => props.theme.fontSize.md};\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        padding: 0;\r\n        display: flex;\r\n    }\r\n`;\r\nconst Title = styled.div`\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        padding: 0 0.25rem;\r\n    }\r\n`;\r\n\r\nexport { SideBarTitleContainer, Title };","import React from 'react';\r\nimport * as S from './SideBarTitle.style';\r\n\r\nfunction SideBarTitle() {\r\n    return(\r\n        <>\r\n        <S.SideBarTitleContainer>\r\n            <S.Title>COVID 19 </S.Title>\r\n            <S.Title>TRACKER</S.Title>\r\n        </S.SideBarTitleContainer>\r\n        </>\r\n    );\r\n}\r\nexport default SideBarTitle;","import styled from 'styled-components';\r\nimport { Home, World } from '@styled-icons/boxicons-regular';\r\n\r\nconst SideBarContentContainer = styled.div`\r\ntext-align: center;\r\nwidth: 100%;\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst DomesticContainer = styled.div`\r\ndisplay: flex;\r\ncursor: pointer;\r\nalign-items: center;\r\nmargin: 1rem 0;\r\npadding: 0.5rem 1rem;\r\n    &:hover {\r\n        background-color: ${(props) => props.theme.color.hoverColor};\r\n    }\r\n\r\n`;\r\nconst DomesticStatus = styled.div`\r\n`;\r\nconst HomeIcon = styled(Home)`\r\nmargin-right: 0.5rem;\r\nwidth: 2rem;\r\npadding-left: 0.5rem;\r\n`;\r\n\r\nconst WorldContainer = styled.div`\r\ndisplay: flex;\r\ncursor: pointer;\r\nalign-items: center;\r\nmargin: 1rem 0;\r\npadding: 0.5rem 1rem;\r\n    &:hover {\r\n        background-color: ${(props) => props.theme.color.hoverColor};\r\n    }\r\n`;\r\nconst WorldStatus = styled.div`\r\n`;\r\nconst WorldIcon = styled(World)`\r\nmargin-right: 0.5rem;\r\nwidth: 2rem;\r\npadding-left: 0.5rem;\r\n`;\r\n\r\nexport { SideBarContentContainer, DomesticContainer, DomesticStatus, HomeIcon, WorldContainer, WorldStatus,WorldIcon };","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as S from './SideBarContent.style';\r\n\r\nfunction SideBarContent() {\r\n\r\n    return(\r\n        <S.SideBarContentContainer>\r\n            <NavLink exact to=\"/\">\r\n                <S.DomesticContainer>\r\n                    <S.HomeIcon/>\r\n                    <S.DomesticStatus>\r\n                    국내 현황\r\n                    </S.DomesticStatus>\r\n                </S.DomesticContainer>   \r\n            </NavLink>\r\n            <NavLink to=\"/world\">\r\n                <S.WorldContainer> \r\n                    <S.WorldIcon/>\r\n                    <S.WorldStatus>세계 현황</S.WorldStatus>\r\n                </S.WorldContainer>    \r\n            </NavLink>\r\n        </S.SideBarContentContainer>\r\n    );\r\n}\r\n\r\nexport default SideBarContent;","import styled from 'styled-components';\r\nimport { Github } from '@styled-icons/boxicons-logos';\r\nimport { DarkMode, LightMode } from '@styled-icons/material-outlined';\r\n\r\nconst SideBarFooterContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-around;\r\n    position: absolute;\r\n    bottom: 0;\r\n    margin-bottom: 1rem;\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst LightModeIcon = styled(LightMode)`\r\ncolor: ${(props) => props.theme.color.iconColor};\r\nwidth: 3rem;\r\ncursor: pointer;\r\n`;\r\n\r\nconst DarkModeIcon = styled(DarkMode)`\r\ncolor: ${(props) => props.theme.color.fontColor};\r\nwidth: 3rem;\r\ncursor: pointer;\r\n`;\r\n\r\nconst GithubIcon = styled(Github)`\r\ncolor: ${(props) => props.theme.color.fontColor};\r\nwidth: 3rem;\r\ncursor: pointer;\r\n`;\r\nconst GithubLink = styled(GithubIcon.withComponent('a'))`\r\n`\r\n\r\nexport { SideBarFooterContainer, LightModeIcon, DarkModeIcon, GithubIcon, GithubLink };","import React from 'react';\r\nimport * as S from './SideBarFooter.style';\r\n\r\nfunction SideBarFooter({changeTheme, isDark}){\r\n\r\n    const onClick = () => {\r\n        changeTheme(isDark);\r\n    }\r\n\r\n    return(\r\n        <S.SideBarFooterContainer>\r\n                <div onClick={onClick}>\r\n                {isDark?<S.LightModeIcon />:<S.DarkModeIcon />}\r\n                </div>\r\n                <S.GithubLink target=\"_blank\" href=\"https://github.com/tlatjdgh3778/COVID19\"\r\n                alt=\"githubLink\">\r\n                    <S.GithubIcon />\r\n                </S.GithubLink>\r\n        </S.SideBarFooterContainer>\r\n    );\r\n}\r\n\r\nexport default SideBarFooter;","import styled from 'styled-components';\r\nimport { Close } from '@styled-icons/evaicons-solid';\r\nimport { Github } from '@styled-icons/boxicons-logos';\r\n\r\nconst Background = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background-color: rgb(0, 0, 0, 0.5);;\r\n    z-index: 1000;\r\n`;\r\n\r\nconst ModalContainer = styled.div`\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    max-height: 80%;\r\n    width: 20rem;\r\n    height: 80%;\r\n    padding: 16px;\r\n    background: ${(props) => props.theme.color.bgColor};\r\n    border-radius: 10px;\r\n    text-align: center;\r\n\r\n    @media ${(props) => props.theme.device.MobileLandscape}{\r\n        width: 90%;\r\n    }\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nwidth: 100%;\r\nheight: 80%;\r\npadding-top: 3rem;\r\n`;\r\n\r\nconst CloseIcon = styled(Close)`\r\nposition: absolute;\r\ntop: 0.5rem;\r\nright: 0.5rem;\r\nwidth: 2rem;\r\ncursor: pointer;\r\n`;\r\n\r\nconst DomesticStatus = styled.div`\r\npadding: 1rem 0;\r\ncursor: pointer;\r\nborder-radius: 10px;\r\n\r\n    &:hover {\r\n        background-color: ${(props) => props.theme.color.hoverColor};\r\n    }\r\n`;\r\n\r\nconst News = styled.div`\r\npadding: 1rem 0;\r\ncursor: pointer;\r\nborder-radius: 10px;\r\n\r\n    &:hover {\r\n        background-color: ${(props) => props.theme.color.hoverColor};\r\n    }\r\n`;\r\n\r\nconst Mode = styled.div`\r\npadding: 1rem 0;\r\ncursor: pointer;\r\nborder-radius: 10px;\r\n`;\r\n\r\nconst GithubContainer = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\ncursor: pointer;\r\n`;\r\nconst GithubIcon = styled(Github)`\r\ncolor: ${(props) => props.theme.color.fontColor};\r\nwidth: 2rem;\r\nmargin-right: 0.5rem;\r\n\r\n`;\r\nconst GithubLink = styled(GithubContainer.withComponent('a'))`\r\n`;\r\n\r\nexport { Background, ModalContainer, MenuContainer, CloseIcon, DomesticStatus, News, Mode, GithubContainer, GithubIcon, GithubLink };","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as S from './SideBarModal.style';\r\n\r\nfunction SideBarModal({showModal, closeModal, changeTheme, isDark}) {\r\n\r\n    const onClick = () => {\r\n        changeTheme(isDark);\r\n    }\r\n    return(\r\n        <>\r\n        {showModal ? \r\n        <S.Background onClick={closeModal}>\r\n            <S.ModalContainer onClick={e => e.stopPropagation()}>\r\n                <div>메뉴</div>\r\n                <S.CloseIcon onClick={closeModal}></S.CloseIcon>\r\n                <S.MenuContainer>\r\n                <NavLink exact to=\"/\">\r\n                    <S.DomesticStatus onClick={closeModal}>국내 현황</S.DomesticStatus>\r\n                </NavLink>\r\n                <NavLink exact to=\"/world\">\r\n                    <S.News onClick={closeModal}>세계 현황</S.News>\r\n                </NavLink>\r\n                    \r\n                    <div onClick={onClick}>\r\n                    {isDark?<S.Mode>라이트 모드</S.Mode>:<S.Mode>다크 모드</S.Mode>}\r\n                    </div>\r\n\r\n                    <S.GithubLink target=\"_blank\" href=\"https://github.com/tlatjdgh3778/COVID19\" alt=\"githubLink\">\r\n                        <S.GithubContainer>\r\n                            <S.GithubIcon></S.GithubIcon>\r\n                            <div>Github</div>\r\n                        </S.GithubContainer>\r\n                    </S.GithubLink>\r\n                </S.MenuContainer>\r\n            </S.ModalContainer>\r\n        </S.Background> : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarModal;","import styled from 'styled-components';\r\nimport { Menu } from '@styled-icons/evaicons-solid';\r\n\r\nconst SideBarContainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nbackground-color: ${(props) => props.theme.color.bgColor};\r\ncolor: ${(props) => props.theme.color.fontColor};\r\nheight: 100%;\r\nposition: fixed;\r\nmin-width: 10rem;\r\nalign-items: center;\r\n\r\n    @media ${(props) => props.theme.device.TabletLandscape}{\r\n        min-width: 8.5rem;\r\n    }\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        align-items: center;\r\n        width: 100%;\r\n        position: absolute;\r\n        height: 4rem;\r\n        justify-content: center;\r\n    }\r\n`;\r\n\r\nconst MenuIcon = styled(Menu)`\r\ndisplay: none;\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        position: absolute;\r\n        display: block;\r\n        width: 2rem;\r\n        top: 1rem;\r\n        right: 1rem;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport { SideBarContainer, MenuIcon };","import React, { useState } from 'react';\r\nimport SideBarTitle from './SideBarTitle/SideBarTitle';\r\nimport SideBarContent from './SideBarContent/SideBarContent';\r\nimport SideBarFooter from './SideBarFooter/SideBarFooter';\r\nimport SideBarModal from './SideBarModal/SideBarModal';\r\nimport * as S from './SideBar.style';\r\n\r\nfunction SideBar({changeTheme, isDark}) {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setShowModal(true);\r\n    }\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n    }\r\n    return(\r\n        <S.SideBarContainer>\r\n            <SideBarTitle></SideBarTitle>\r\n            <SideBarContent></SideBarContent>\r\n            <SideBarFooter changeTheme={changeTheme} isDark={isDark}></SideBarFooter>\r\n            <S.MenuIcon onClick={openModal}></S.MenuIcon>\r\n            <SideBarModal showModal={showModal} closeModal={closeModal} changeTheme={changeTheme} isDark={isDark}></SideBarModal>\r\n        </S.SideBarContainer>\r\n    );\r\n\r\n}\r\n\r\nexport default SideBar;","import styled, {css} from 'styled-components';\r\n\r\nconst CityContainer = styled.div`\r\n    margin: 1rem;\r\n    font-weight: 700;\r\n    font-size: ${(props) => props.theme.fontSize.lg};\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n    margin: 0 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-x: auto;\r\n`;\r\nconst TitleContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst Content = css`\r\n    text-align: center;\r\n    min-width: 6rem;\r\n    border-radius: 5px;\r\n    padding: 0.5rem; \r\n    margin-bottom: 0.25rem;\r\n    margin-right: 0.25rem;\r\n    cursor: default;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-end;\r\n`;\r\n\r\nconst TableTitle = styled.div`\r\n    ${Content};\r\n    font-weight: 700;\r\n    font-size: ${(props) => props.theme.fontSize.sm};\r\n    border: none;\r\n    background-color: ${(props) => props.theme.color.bgColor};\r\n    justify-content: center;\r\n`;\r\n\r\nconst TableTitleCity = styled(TableTitle)`\r\n    position: sticky;\r\n    left: 0;\r\n    min-width: 4rem;\r\n    margin-bottom: 0.25rem;\r\n    margin-right: 0.25rem;\r\n`;\r\n\r\nconst CityName = styled.div`\r\n    ${Content}\r\n    background-color: ${(props) => props.theme.color.bgColor};\r\n    position: sticky;\r\n    left: 0;\r\n    min-width: 4rem;\r\n    justify-content: center;\r\n`;\r\n\r\nconst TotalCase = styled.div`\r\n    ${Content}\r\n    background-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\r\n`;\r\n\r\nconst Recovered = styled.div`\r\n    ${Content}\r\n    background-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\r\n`;\r\n\r\nconst Death = styled.div`\r\n    ${Content}\r\n    background-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\r\n`;\r\n\r\nconst Percentage = styled.div`\r\n    ${Content}\r\n    background-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\r\n`;\r\n\r\nexport { CityContainer, TableContainer, TitleContainer, Content, TableTitle, TableTitleCity, CityName, TotalCase, Recovered, Death, Percentage };","import React from 'react';\r\nimport * as S from './DomesticCityStatus.style';\r\n\r\nconst DomesticCityStatus = ({cityData}) => {\r\n\r\nconst ew = Object.entries(cityData);\r\n    return(\r\n        <>\r\n        <S.CityContainer>시 도 별 현황</S.CityContainer>\r\n        <S.TableContainer>\r\n            <S.TitleContainer>\r\n                <S.TableTitleCity>지역</S.TableTitleCity>\r\n                <S.TableTitle>확진자</S.TableTitle>\r\n                <S.TableTitle>완치자</S.TableTitle>\r\n                <S.TableTitle>사망자</S.TableTitle>\r\n                <S.TableTitle>발생률</S.TableTitle>\r\n            </S.TitleContainer>\r\n            {ew.map((data, i)=>{\r\n                if(i%2 === 0){\r\n                    return(\r\n                        <S.TitleContainer key={i}>\r\n                            <S.CityName>{data[1].countryName}</S.CityName>\r\n                            <S.TotalCase>{data[1].totalCase}</S.TotalCase>\r\n                            <S.Recovered>{data[1].recovered}</S.Recovered>\r\n                            <S.Death>{data[1].death}</S.Death>\r\n                            <S.Percentage>{data[1].percentage}</S.Percentage>\r\n                        </S.TitleContainer>\r\n                    )\r\n                }else{\r\n                    return(\r\n                        <S.TitleContainer key={i}>\r\n                            <S.CityName>{data[1].countryName}</S.CityName>\r\n                            <S.TotalCase bgColor>{data[1].totalCase}</S.TotalCase>\r\n                            <S.Recovered bgColor>{data[1].recovered}</S.Recovered>\r\n                            <S.Death bgColor>{data[1].death}</S.Death>\r\n                            <S.Percentage bgColor>{data[1].percentage}</S.Percentage>\r\n                        </S.TitleContainer>\r\n                    )\r\n                }\r\n            })}\r\n        </S.TableContainer>\r\n        </>\r\n    )\r\n}\r\nexport default DomesticCityStatus;","import styled, {css} from 'styled-components';\r\n\r\nconst DomesticStatusTitle = styled.div`\r\n    margin: 1rem;\r\n    padding-bottom: 1rem;\r\n    font-weight: 700;\r\n    font-size: ${(props) => props.theme.fontSize.lg};\r\n    border-bottom: 1px solid ${(props) => props.theme.color.fontColor};\r\n`;\r\nconst DomesticStatusContainer = styled.div`\r\n    display: flex;\r\n    margin: 0 1rem;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst container = css`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    /* margin: 0 1rem; */\r\n    padding: 0.5rem 1rem;\r\n    width: 4rem;\r\n    height: 5rem;\r\n    justify-content: space-between;\r\n    cursor: default;\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n            margin: 0;\r\n        }\r\n    @media ${(props) => props.theme.device.MobileLandscape}{\r\n        width: 3rem;\r\n        height: 4rem;\r\n        padding: 0.25rem;\r\n    }\r\n`;\r\n\r\nconst TotalContainer = styled.div`\r\n    ${container};\r\n    &:hover{\r\n            background-color: ${(props) => props.theme.color.hoverColor};\r\n        }\r\n        \r\n`;\r\n\r\nconst Title = styled.div`\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        font-size: ${(props) => props.theme.fontSize.ssm};\r\n    }\r\n`;\r\n\r\nconst Data = styled.div`\r\n    font-size: ${(props) => props.theme.fontSize.lg};\r\n    font-weight: 700;\r\n    color: ${(props) => props.color || props.theme.color.fontColor};\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        font-size: ${(props) => props.theme.fontSize.md};\r\n    }\r\n    @media ${(props) => props.theme.device.MobileLandscape}{\r\n        font-size: ${(props) => props.theme.fontSize.sm};\r\n    }\r\n`;\r\nconst TodayData = styled.div`\r\n    color: ${(props) => props.color || props.theme.color.fontColor};\r\n    display: flex;\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        font-size: ${(props) => props.theme.fontSize.ssm};\r\n    }\r\n`;\r\n\r\nexport { DomesticStatusTitle, DomesticStatusContainer, container, TotalContainer, Title, Data, TodayData };","import React from 'react';\r\nimport * as S from './DomesticStatus.style';\r\n\r\nconst DomesticStatus = ({koreaData, cityData}) => {\r\n// 누적 확진자 : TotalCase, city_url.korea.newCase\r\n// 격리해제(완치) : TotalRecovered, TodayRecovered\r\n// 격리중(치료중) : NowCase, TotalCaseBefore\r\n// 사망자 수 : TotalDeath, TodayDeath\r\n\r\n    const names = ['확진환자', '치료중', '격리해제', '사망자'];\r\n\r\n    return(\r\n        <>\r\n        <S.DomesticStatusTitle>국내현황</S.DomesticStatusTitle>\r\n        <S.DomesticStatusContainer>\r\n            {names.map((name, i)=>{\r\n                return(\r\n                    <S.TotalContainer key={i}>\r\n                        {\r\n                        <>\r\n                        <S.Title>{name}</S.Title>\r\n                        {name==='확진환자'?\r\n                        <>\r\n                        <S.Data color={'#df0736'}>\r\n                            {koreaData.TotalCase}\r\n                        </S.Data>                      \r\n                        <S.TodayData color={'#df0736'}><div>{cityData.korea.newCase>0?'+':''}</div><div>{cityData.korea.newCase}</div></S.TodayData>\r\n                        </>\r\n                        :\r\n                        (\r\n                            name==='치료중'?\r\n                            <>\r\n                            <S.Data color={'#0562cb'}>\r\n                                {koreaData.NowCase}\r\n                            </S.Data>\r\n                            <S.TodayData color={'#0562cb'}><div>{koreaData.TotalCaseBefore>0?'+':''}</div><div>{koreaData.TotalCaseBefore}</div></S.TodayData>\r\n                            </>\r\n                            :\r\n                            (\r\n                                name==='격리해제'?\r\n                                <>\r\n                                <S.Data color={'#27a643'}>\r\n                                    {koreaData.TotalRecovered}\r\n                                </S.Data>\r\n                                <S.TodayData color={'#27a643'}><div>{koreaData.TodayRecovered>0?'+':''}</div><div>{koreaData.TodayRecovered}</div></S.TodayData>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                <S.Data>\r\n                                    {koreaData.TotalDeath}\r\n                                </S.Data>\r\n                                <S.TodayData><div>{koreaData.TodayDeath>0?'+':''}</div><div>{koreaData.TodayDeath}</div></S.TodayData>\r\n                                </>\r\n                            )\r\n                        )}\r\n                        </>}\r\n                    </S.TotalContainer>\r\n                )\r\n            })}\r\n            \r\n        </S.DomesticStatusContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DomesticStatus;\r\n","import styled from 'styled-components';\r\nimport { MapContainer } from 'react-leaflet';\r\n\r\nconst MapContainerCustom = styled(MapContainer)`\r\n    width: 35rem;\r\n    height: 70vh;\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst cityStyle = {\r\n    fillColor: '#656f7d',\r\n    color: '#233044',\r\n    weight: 3,\r\n}\r\nconst CityName = styled.div`\r\n    margin: 1rem;\r\n    font-weight: 700;\r\n    font-size: ${(props) => props.theme.fontSize.lg};\r\n`;\r\nconst CityCaseContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 1rem;\r\n`;\r\nconst CityCase = styled.div`\r\n    font-weight: 700;\r\n    color: ${(props) => props.theme.color.fontRed};\r\n    font-size: ${(props) => props.theme.fontSize.lg};\r\n`;\r\nconst CityCaseStatus = styled.div`\r\n`;\r\nconst UpdateTime = styled.div`\r\n    margin-left: 1rem;\r\n    margin-right: 1rem;\r\n    margin-bottom: 0.5rem;\r\n    font-size: ${(props) => props.theme.fontSize.ssm};\r\n`;\r\n\r\nexport { MapContainerCustom, cityStyle, CityName, CityCaseContainer, CityCase, CityCaseStatus, UpdateTime };","import React, { useState } from 'react';\r\nimport { GeoJSON } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport mapData from 'data/cities.json';\r\nimport CountUp from 'react-countup';\r\nimport * as S from './Map.style';\r\n\r\nfunction Map({koreaData, cityData, isDark}) {\r\n    const [name, setName] = useState({\r\n        name:'서울',\r\n        case:cityData.seoul.newCase,\r\n        totalCase:cityData.seoul.totalCase,\r\n    });\r\n    \r\n    const onEachCity = (city, layer) => {\r\n        const cityName = city.properties.CTP_ENG_NM;\r\n\r\n        layer.on({\r\n            click: e => {\r\n                e.target.setStyle({fillColor: '#656f7d'});\r\n                e.target.setStyle({fillColor: 'red'});\r\n                switch(cityName){\r\n                    case 'seoul':\r\n                        setName({name: '서울', case: cityData.seoul.newCase, totalCase: cityData.seoul.totalCase});\r\n                        break;\r\n                    case 'incheon':\r\n                        setName({name: '인천', case: cityData.incheon.newCase, totalCase: cityData.incheon.totalCase});\r\n                        break;\r\n                    case 'gyeonggi':\r\n                        setName({name: '경기', case: cityData.gyeonggi.newCase, totalCase: cityData.gyeonggi.totalCase});\r\n                        break;\r\n                    case 'gangwon':\r\n                        setName({name: '강원', case: cityData.gangwon.newCase, totalCase: cityData.gangwon.totalCase});\r\n                        break;\r\n                    case 'chungbuk':\r\n                        setName({name: '충북', case: cityData.chungbuk.newCase, totalCase: cityData.chungbuk.totalCase});\r\n                        break;\r\n                    case 'chungnam':\r\n                        setName({name: '충남', case: cityData.chungnam.newCase, totalCase: cityData.chungnam.totalCase});\r\n                        break;\r\n                    case 'daejeon':\r\n                        setName({name: '대전', case: cityData.daejeon.newCase, totalCase: cityData.daejeon.totalCase});\r\n                        break;\r\n                    case 'sejong':\r\n                        setName({name: '세종', case: cityData.sejong.newCase, totalCase: cityData.sejong.totalCase});\r\n                        break;\r\n                    case 'jeonnam':\r\n                        setName({name: '전남', case: cityData.jeonnam.newCase, totalCase: cityData.jeonnam.totalCase});\r\n                        break;\r\n                    case 'jeonbuk':\r\n                        setName({name: '전북', case: cityData.jeonbuk.newCase, totalCase: cityData.jeonbuk.totalCase});\r\n                        break;\r\n                    case 'gwangju':\r\n                        setName({name: '광주', case: cityData.gwangju.newCase, totalCase: cityData.gwangju.totalCase});\r\n                        break;\r\n                    case 'gyeongbuk':\r\n                        setName({name: '경북', case: cityData.gyeongbuk.newCase, totalCase: cityData.gyeongbuk.totalCase});\r\n                        break;\r\n                    case 'daegu':\r\n                        setName({name: '대구', case: cityData.daegu.newCase, totalCase: cityData.daegu.totalCase});\r\n                        break;\r\n                    case 'ulsan':\r\n                        setName({name: '울산', case: cityData.ulsan.newCase, totalCase: cityData.ulsan.totalCase});\r\n                        break;\r\n                    case 'busan':\r\n                        setName({name: '부산', case: cityData.busan.newCase, totalCase: cityData.busan.totalCase});\r\n                        break;\r\n                    case 'gyeongnam':\r\n                        setName({name: '경남', case: cityData.gyeongnam.newCase, totalCase: cityData.gyeongnam.totalCase});\r\n                        break;\r\n                    case 'jeju':\r\n                        setName({name: '제주', case: cityData.jeju.newCase, totalCase: cityData.jeju.totalCase});\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            },\r\n            mouseover: e => {\r\n                e.target.setStyle({fillColor: 'red'});\r\n            },\r\n            mouseout: e => {\r\n                e.target.setStyle({fillColor: '#656f7d'});\r\n                // layer.closePopup();\r\n            },\r\n        });\r\n}\r\n\r\nconst newCase = parseInt(name.case.replace(/,/g , ''))\r\nconst newTotalCase = parseInt(name.totalCase.replace(/,/g , ''))\r\n    return(\r\n        <>\r\n            <S.UpdateTime>{koreaData.updateTime}</S.UpdateTime>\r\n            <S.CityName>{name.name}</S.CityName>\r\n            <S.CityCaseContainer>\r\n                <S.CityCase>\r\n                    <CountUp\r\n                    start={0}\r\n                    end={newCase}\r\n                    duration={1.5}\r\n                    separator=\",\">\r\n                    </CountUp>\r\n                </S.CityCase>\r\n                <S.CityCaseStatus>당일 확진자</S.CityCaseStatus>\r\n            </S.CityCaseContainer>\r\n            <S.CityCaseContainer>\r\n                <S.CityCase>\r\n                    <CountUp\r\n                    start={0}\r\n                    end={newTotalCase}\r\n                    duration={1.5}\r\n                    separator=\",\">\r\n                    </CountUp>\r\n                </S.CityCase>\r\n                <S.CityCaseStatus>누적 확진자</S.CityCaseStatus>\r\n            </S.CityCaseContainer>\r\n            <S.MapContainerCustom\r\n            zoom={6.5}\r\n            center={[36, 128]}>\r\n                <GeoJSON style={S.cityStyle} data={mapData.features}\r\n                onEachFeature={onEachCity} />\r\n            </S.MapContainerCustom>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Map;","import styled from 'styled-components';\r\n\r\nconst MainContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-left: 11rem;\r\n    margin-right: 3rem;\r\n    padding-top: 5rem;\r\n    color: ${(props) => props.theme.color.fontColor};\r\n  \r\n    @media ${(props) => props.theme.device.TabletLandscape}{\r\n        margin-left: 9rem;\r\n    }\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-left: 0;\r\n        margin-right: 0;\r\n        padding-top: 6rem;\r\n        width: 100%;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nconst RightContainer = styled.div`\r\n    color: ${(props) => props.theme.color.fontColor};\r\n    margin: 1rem;\r\n    min-height: 60rem;\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        display: -webkit-flex;\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 1rem 0;\r\n        width: 85%;\r\n    }\r\n`;\r\n\r\nconst LeftContainer = styled.div`\r\n    margin: 0 3rem;\r\n    color: ${(props) => props.theme.color.fontColor};\r\n\r\n    @media ${(props) => props.theme.device.TabletLandscape}{\r\n        margin: 1rem;\r\n    }\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0;\r\n        width: 85%;\r\n        /* min-width: 100%; */\r\n    }\r\n`;\r\n\r\nexport { MainContainer, RightContainer, LeftContainer };","import React from \"react\";\r\nimport { DomesticStatus, DomesticCityStatus } from \"components/Domestic/index\";\r\nimport Map from \"components/Map/Map\";\r\nimport * as GS from \"style/Component.style\";\r\n\r\nconst Domestic = ({ koreaData, cityData, isDark }) => {\r\n    return (\r\n        <>\r\n            <GS.LeftContainer>\r\n                <DomesticStatus\r\n                    koreaData={koreaData}\r\n                    cityData={cityData}\r\n                ></DomesticStatus>\r\n                <DomesticCityStatus cityData={cityData}></DomesticCityStatus>\r\n            </GS.LeftContainer>\r\n            <GS.RightContainer>\r\n                <Map\r\n                    koreaData={koreaData}\r\n                    cityData={cityData}\r\n                    isDark={isDark}\r\n                ></Map>\r\n            </GS.RightContainer>\r\n            {/* <div>국내 api 주소 작업 중</div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Domestic;\r\n","import styled, {css} from 'styled-components';\r\n\r\nconst CityContainer = styled.div`\r\nmargin: 1rem;\r\nfont-weight: 700;\r\nfont-size: ${(props) => props.theme.fontSize.lg};\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\nmargin: 0 1rem;\r\ndisplay: flex;\r\nflex-direction: column;\r\noverflow: auto;\r\nmax-height: 110vh;\r\n`;\r\nconst TitleContainer = styled.div`\r\ndisplay: flex;\r\n`;\r\n\r\nconst Content = css`\r\ntext-align: center;\r\nmin-width: 6rem;\r\nborder-radius: 5px;\r\npadding: 0.5rem; \r\nmargin-bottom: 0.25rem;\r\nmargin-right: 0.25rem;\r\ncursor: default;\r\ndisplay: flex;\r\njustify-content: flex-end;\r\nalign-items: flex-end;\r\n`;\r\n\r\nconst TableTitle = styled.div`\r\n${Content};\r\nfont-weight: 700;\r\nfont-size: ${(props) => props.theme.fontSize.sm};\r\nborder: none;\r\nbackground-color: ${(props) => props.theme.color.bgColor};\r\nalign-items: center;\r\njustify-content: center;\r\n`;\r\nconst TableTitleCity = styled(TableTitle)`\r\nposition: sticky;\r\nleft: 0;\r\nmargin-bottom: 0.25rem;\r\nmargin-right: 0.25rem;\r\nmax-width: 4rem;\r\njustify-content: center;\r\n`;\r\nconst CityName = styled.div`\r\n${Content}\r\nbackground-color: ${(props) => props.theme.color.bgColor};\r\nposition: sticky;\r\nleft: 0;\r\nmax-width: 4rem;\r\njustify-content: center;\r\n`;\r\nconst TotalCase = styled.div`\r\n${Content}\r\nbackground-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\r\n`;\r\nconst Recovered = styled.div`\r\n${Content}\r\nbackground-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\r\n`;\r\nconst Death = styled.div`\r\n${Content}\r\nbackground-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\r\n`;\r\nconst Percentage = styled.div`\r\n${Content}\r\nbackground-color: ${(props) => props.bgColor? props.theme.color.bgColor:props.theme.color.wallpaperColor};\r\n`;\r\n\r\nexport { CityContainer, TableContainer, TitleContainer, Content, TableTitle, TableTitleCity, CityName, TotalCase, Recovered, Death, Percentage };","import React from 'react';\r\nimport * as S from './Countries.style';\r\n\r\nconst Countries = ({ countriesData }) => {\r\n\r\n    const countries = Object.entries(countriesData);\r\n    \r\n    return(\r\n        <>\r\n        <S.CityContainer>나라 별 현황</S.CityContainer>\r\n        <S.TableContainer>\r\n            <S.TitleContainer>\r\n                <S.TableTitleCity>지역</S.TableTitleCity>\r\n                <S.TableTitle>완치자</S.TableTitle>\r\n                <S.TableTitle>사망자</S.TableTitle>\r\n                <S.TableTitle>확진자</S.TableTitle>\r\n                <S.TableTitle>백만 명당</S.TableTitle>\r\n            </S.TitleContainer>\r\n            {countries.map((data, i)=>{\r\n                if(i%2 === 0){\r\n                    return(\r\n                        <S.TitleContainer key={i}>\r\n                            <S.CityName>{data[1].country}</S.CityName>\r\n                            <S.TotalCase>{data[1].cases.toLocaleString()}</S.TotalCase>\r\n                            <S.Recovered>{data[1].recovered.toLocaleString()}</S.Recovered>\r\n                            <S.Death>{data[1].deaths.toLocaleString()}</S.Death>\r\n                            <S.Percentage>{data[1].casesPerOneMillion.toLocaleString()}</S.Percentage>\r\n                        </S.TitleContainer>\r\n                    )\r\n                }else{\r\n                return(\r\n                    <S.TitleContainer key={i}>\r\n                        <S.CityName>{data[1].country}</S.CityName>\r\n                        <S.TotalCase bgColor>{data[1].cases.toLocaleString()}</S.TotalCase>\r\n                        <S.Recovered bgColor>{data[1].recovered.toLocaleString()}</S.Recovered>\r\n                        <S.Death bgColor>{data[1].deaths.toLocaleString()}</S.Death>\r\n                        <S.Percentage bgColor>{data[1].casesPerOneMillion.toLocaleString()}</S.Percentage>\r\n                    </S.TitleContainer>\r\n                )}\r\n            })}\r\n        </S.TableContainer>\r\n        </>\r\n    )\r\n}\r\nexport default Countries;","import styled, {css} from 'styled-components';\r\n\r\nconst WorldDataContainer = styled.div`\r\nmargin-bottom: 5rem;\r\n`;\r\nconst DomesticStatusTitle = styled.div`\r\nmargin: 1rem;\r\npadding-bottom: 1rem;\r\nfont-weight: 700;\r\nfont-size: ${(props) => props.theme.fontSize.lg};\r\nborder-bottom: 1px solid ${(props) => props.theme.color.fontColor};\r\n`;\r\nconst DomesticStatusContainer = styled.div`\r\ndisplay: flex;\r\nmargin: 0 1rem;\r\njustify-content: space-between;\r\n`;\r\n\r\nconst container = css`\r\nborder-radius: 10px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n/* margin: 0 1rem; */\r\npadding: 0.5rem 1rem;\r\nwidth: 8rem;\r\nheight: 5rem;\r\njustify-content: space-between;\r\ncursor: default;\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n            margin: 0;\r\n        }\r\n    @media ${(props) => props.theme.device.MobileLandscape}{\r\n        width: 5rem;\r\n        height: 4rem;\r\n        padding: 0.25rem;\r\n    }\r\n        \r\n`;\r\n\r\nconst TotalContainer = styled.div`\r\n${container};\r\n    &:hover{\r\n        background-color: ${(props) => props.theme.color.bgColor};\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        font-size: ${(props) => props.theme.fontSize.sm};\r\n    }\r\n    @media ${(props) => props.theme.device.MobileLandscape}{\r\n        font-size: ${(props) => props.theme.fontSize.ssm};\r\n    }\r\n`;\r\n\r\nconst Data = styled.div`\r\nfont-size: ${(props) => props.theme.fontSize.lg};\r\nfont-weight: 700;\r\ncolor: ${(props) => props.color || props.theme.color.fontColor};\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        font-size: ${(props) => props.theme.fontSize.md};\r\n    }\r\n    @media ${(props) => props.theme.device.MobileLandscape}{\r\n        font-size: ${(props) => props.theme.fontSize.ssm};\r\n    }\r\n`;\r\n\r\nexport { WorldDataContainer, DomesticStatusTitle, DomesticStatusContainer, container, TotalContainer, Title, Data };","import React from 'react';\r\nimport * as S from './WorldStatus.style';\r\n\r\nconst WorldStatus = ({ worldData }) => {\r\n    const names = ['확진환자', '격리해제', '사망자'];\r\n\r\n    return(\r\n        <S.WorldDataContainer>\r\n            <S.DomesticStatusTitle>세계현황</S.DomesticStatusTitle>\r\n            <S.DomesticStatusContainer>\r\n                {names.map((name, i)=>{\r\n                    return(\r\n                        <S.TotalContainer key={i} >\r\n                            {\r\n                            <>\r\n                            <S.Title>{name}</S.Title>\r\n                                {name==='확진환자'?\r\n                                <>\r\n                                <S.Data color={'#df0736'}>\r\n                                    {worldData.confirmed.toLocaleString()}\r\n                                </S.Data>                      \r\n                                </>\r\n                                :\r\n                                (\r\n                                name==='격리해제'?\r\n                                <>\r\n                                <S.Data color={'#27a643'}>{worldData.recovered.toLocaleString()}</S.Data>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                <S.Data>{worldData.deaths.toLocaleString()}</S.Data>\r\n                                </>\r\n                                )}\r\n                            </>\r\n                            }\r\n                        </S.TotalContainer>\r\n                    )\r\n                })}\r\n            </S.DomesticStatusContainer>\r\n        </S.WorldDataContainer>\r\n    );\r\n}\r\n\r\nexport default WorldStatus;\r\n","import styled, { css } from 'styled-components';\r\nimport numeral from 'numeral';\r\n\r\nconst ChartStyle = css`\r\nborder-radius: 10px;\r\nmargin: 1rem 0;\r\npadding: 0.5rem 0;\r\n`;\r\nconst ChartTitle = css`\r\nmargin: 0.5rem;\r\nfont-weight: 700;\r\ntext-align: center;\r\n`;\r\n\r\nconst options = {\r\n    plugins: {\r\n        title: {\r\n            display: true,\r\n            text: 'Custom Chart Title'\r\n        }\r\n    },\r\n    legend: {\r\n        // labels: {\r\n        //     fontSize: 16,\r\n        //     fontWeight: 900,\r\n        // }\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    // maintainAspectRatio: false,\r\n\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n    },\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },\r\n            }\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false,\r\n                },       \r\n                ticks: {\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n}\r\nconst CasesChartContainer = styled.div`\r\n${ChartStyle};\r\nbackground-color: ${(props) => props.theme.color.chartRed};\r\n`;\r\nconst RecoveredChartContainer = styled.div`\r\n${ChartStyle};\r\nbackground-color: ${(props) => props.theme.color.chartGreen};\r\n`;\r\nconst DeathsChartContainer = styled.div`\r\n${ChartStyle};\r\nbackground-color: ${(props) => props.theme.color.chartColor};\r\n`;\r\nconst CasesTitle = styled.div`\r\n${ChartTitle}\r\ncolor: ${(props) => props.theme.color.fontRed};\r\n`;\r\nconst RecoveredTitle = styled.div`\r\n${ChartTitle}\r\ncolor: ${(props) => props.theme.color.fontGreen};\r\n`;\r\nconst DeathsTitle = styled.div`\r\n${ChartTitle}\r\ncolor: ${(props) => props.theme.color.fontColor};\r\n`;\r\n\r\nconst Title = styled.div`\r\nmargin: 1rem;\r\npadding-bottom: 1rem;\r\nfont-weight: 700;\r\nfont-size: ${(props) => props.theme.fontSize.lg};\r\n`;\r\n\r\nexport { ChartStyle, ChartTitle, options, CasesChartContainer, RecoveredChartContainer, DeathsChartContainer, CasesTitle, RecoveredTitle, DeathsTitle, Title };","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport * as S from './WorldStatusChart.style';\r\n\r\nconst WorldStatusChart = () => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    const url = 'https://disease.sh/v3/covid-19/historical/all?lastdays=90';\r\n\r\n    useEffect(()=>{\r\n        const getData = async () => {\r\n\r\n            const res = await fetch(url);\r\n            const res_data = await res.json();\r\n    \r\n            setDailyData(res_data);\r\n        }\r\n        getData();\r\n    }, []);\r\n\r\n    let dateLabels;\r\n    let casesData;\r\n    let deathsData;\r\n    let recoveredData;\r\n    const ew = Object.entries(dailyData);\r\n    console.log(Object.keys(ew));\r\n    console.log(ew.length);\r\n\r\n    if(ew.length !== 0){\r\n        dateLabels = Object.keys(ew[0][1]);\r\n        casesData = Object.values(ew[0][1]);\r\n        deathsData = Object.values(ew[1][1]);\r\n        recoveredData = Object.values(ew[2][1]);\r\n    }\r\n    const casesChart = {\r\n        labels: dateLabels,\r\n        datasets: [\r\n          {\r\n            label: \"확진자 수\",\r\n            data: casesData,\r\n            fill: false,\r\n            borderColor: \"#df0736\",\r\n          },]\r\n      };\r\n      const recoveredChart = {\r\n        labels: dateLabels,\r\n        datasets: [\r\n          {\r\n            label: \"완치자 수\",\r\n            data: recoveredData,\r\n            fill: false,\r\n            borderColor: \"#27a643\",\r\n\r\n          },]\r\n      };\r\n      const deathsChart = {\r\n        labels: dateLabels,\r\n        datasets: [\r\n          {\r\n            label: \"사망자 수\",\r\n            data: deathsData,\r\n            fill: false,\r\n            borderColor: \"#373737\",\r\n          },],\r\n      };\r\n\r\n    return(\r\n        <>\r\n        <S.Title>전 세계 코로나 차트</S.Title>\r\n        <S.CasesChartContainer>\r\n            <S.CasesTitle>확진자 수</S.CasesTitle>\r\n            <Line data={casesChart} options={S.options}></Line>\r\n        </S.CasesChartContainer>\r\n        <S.RecoveredChartContainer>\r\n            <S.RecoveredTitle>완치자 수</S.RecoveredTitle>\r\n            <Line data={recoveredChart} options={S.options}></Line>\r\n        </S.RecoveredChartContainer>\r\n        <S.DeathsChartContainer>\r\n            <S.DeathsTitle>사망자 수</S.DeathsTitle>\r\n            <Line data={deathsChart} options={S.options}></Line>\r\n        </S.DeathsChartContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WorldStatusChart;","import React from 'react';\r\nimport { WorldStatus, WorldStatusChart, Countries } from 'components/World/index';\r\n\r\nimport * as GS from 'style/Component.style';\r\n\r\nconst World = ({ world }) => {\r\n\r\n    return(\r\n        <>\r\n            <GS.LeftContainer>\r\n                <WorldStatus worldData={world.worldData} />\r\n                <WorldStatusChart />\r\n            </GS.LeftContainer>\r\n            <GS.RightContainer>\r\n                <Countries countriesData={world.countriesData}></Countries>\r\n            </GS.RightContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default World;","const size = {\r\n    MobileLandscape: '480px',\r\n    TabletPortrait: '768px',\r\n    TabletLandscape: '992px',\r\n    Laptops: '1200px',\r\n}\r\n\r\nconst device = {\r\n    MobileLandscape: `(max-width: ${size.MobileLandscape})`,\r\n    TabletPortrait: `(max-width: ${size.TabletPortrait})`,\r\n    TabletLandscape: `(max-width: ${size.TabletLandscape})`,\r\n    Laptops: `(max-width: ${size.Laptops})`,\r\n}\r\n\r\nconst fontSize = {\r\n    ssm: '12px',\r\n    sm : '16px',\r\n    md: '20px',\r\n    lg: '24px',\r\n    xl: '28px',\r\n    xxl: '32px', \r\n}\r\n\r\nconst lightMode = {\r\n    color: {\r\n        wallpaperColor: '#ffffff',\r\n        bgColor: '#f8f5fa',\r\n        fontColor: '#373737',\r\n        fontRed: '#df0736',\r\n        fontBlue: '#0562cb',\r\n        fontGreen: '#27a643',\r\n\r\n        highlightColor: '#c2b7da',\r\n        hoverColor: '#f5f5f5',\r\n        \r\n        chartRed: '#ffe1e6',\r\n        chartGreen: '#e4f4e7',\r\n        chartColor: '#f6f6f7',\r\n\r\n        iconColor: '#373737',\r\n    },\r\n    fontSize,\r\n    device,\r\n}\r\nconst darkMode = {\r\n    color: {\r\n        wallpaperColor: '#1b2635',\r\n        bgColor: '#233044',\r\n        fontColor: '#6c757d',\r\n        fontRed: '#df0736',\r\n        fontBlue: '#0562cb',\r\n        fontGreen: '#27a643',\r\n\r\n        highlightColor: '#2c1952',\r\n        hoverColor: '#152338',\r\n        chartRed: '#311325',\r\n        chartGreen: '#162626',\r\n        chartColor: '#191928',\r\n\r\n        iconColor: '#ffc107',\r\n    },\r\n    fontSize,\r\n    device,\r\n}\r\n\r\nconst theme = {\r\n    lightMode,\r\n    darkMode,\r\n}\r\n\r\nexport default theme;","const API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n// export const koreaUrl = `https://ajax-api.corona-19.kr/?dir=korea&serviceKey=${API_KEY}`;\r\nexport const koreaUrl = `https://api.corona-19.kr/korea/?serviceKey=${API_KEY}`;\r\n\r\n// export const cityUrl = `https://ajax-api.corona-19.kr/?dir=country&serviceKey=${API_KEY}`;\r\nexport const cityUrl = `http://api.corona-19.kr/korea/country/new/?serviceKey=${API_KEY}`;\r\n\r\nexport const worldUrl = 'https://disease.sh/v3/covid-19/all';\r\n\r\nexport const countriesUrl = 'https://disease.sh/v3/covid-19/countries';","import { koreaUrl, worldUrl, countriesUrl } from 'utils/constant';\r\n\r\nconst getKoreaData = async() => {\r\n    try {\r\n        const koreaResponse = await fetch(koreaUrl);\r\n        const koreaData = await koreaResponse.json();\r\n\r\n        return koreaData;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getCityData = async() => {\r\n    try {\r\n        const cityResponse = await fetch('https://api.corona-19.kr/korea/country/new/?serviceKey=RNZOsrb1kf6D89weJtm74ABhzSjcMI2Ku');\r\n        const cityData = await cityResponse.json();\r\n\r\n        return cityData;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getWorldData = async() => {\r\n    try {\r\n        const worldResponse = await fetch(worldUrl);\r\n        const worldData = await worldResponse.json();\r\n\r\n        return worldData;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getCountriesData = async() => {\r\n    try {\r\n        const countriesResponse = await fetch(countriesUrl);\r\n        const countriesData = await countriesResponse.json();\r\n\r\n        return countriesData;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { getKoreaData, getCityData, getWorldData, getCountriesData };","import React, { useState, useEffect } from 'react';\r\nimport GlobalStyle from 'style/global';\r\nimport SideBar from 'components/SideBar/SideBar';\r\nimport { World, Domestic } from 'pages/index';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport theme from 'style/theme';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { getKoreaData, getCityData, getWorldData, getCountriesData } from 'apis/getCovidData';\r\nimport * as GS from 'style/Component.style';\r\n\r\nconst AppStyle = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n\r\n    @media ${(props) => props.theme.device.TabletPortrait}{\r\n        width: 100%;\r\n    }\r\n`;\r\n// 누적 확진자 : TotalCase, city_url.korea.newCase\r\n// 격리해제(완치) : TotalRecovered, TodayRecovered\r\n// 격리중(치료중) : NowCase, TotalCaseBefore\r\n// 사망자 수 : TotalDeath, TodayDeath\r\nfunction App() {\r\n\r\n    const [isDark, setIsDark ] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [data, setData] = useState({\r\n    koreaData:\"\",\r\n    cityData:{\r\n        seoul:\"\",\r\n        incheon:\"\",\r\n        gyeonggi:\"\",\r\n        gangwon:\"\",\r\n        chungbuk:\"\",\r\n        chungnam:\"\",\r\n        daejeon:\"\",\r\n        sejong:\"\",\r\n        jeonbuk:\"\",\r\n        jeonnam:\"\",\r\n        gwangju:\"\",\r\n        gyeongbuk:\"\",\r\n        daegu:\"\",\r\n        ulsan:\"\",\r\n        gyeongnam:\"\",\r\n        busan:\"\",\r\n        jeju:\"\",\r\n        korea:\"\",\r\n    }\r\n    });\r\n    const [world, setWorld] = useState({\r\n        worldData:{\r\n            confirmed:'',\r\n            deaths:'',\r\n            recovered:'',\r\n        },\r\n        countriesData:'',\r\n    });\r\n\r\n    useEffect(()=>{\r\n    const getData = async () => {\r\n        const koreaData = await getKoreaData();\r\n        const cityData = await getCityData(); \r\n        const worldData = await getWorldData();\r\n        const countriesData = await getCountriesData();\r\n\r\n        setWorld({\r\n            worldData:{\r\n                confirmed:worldData.cases,\r\n                deaths:worldData.deaths,\r\n                recovered:worldData.recovered,\r\n            },\r\n            countriesData,\r\n        });\r\n\r\n        setData({koreaData, cityData:{\r\n        seoul:cityData.seoul,\r\n        incheon:cityData.incheon,\r\n        gyeonggi:cityData.gyeonggi,\r\n        gangwon:cityData.gangwon,\r\n        chungbuk:cityData.chungbuk,\r\n        chungnam:cityData.chungnam,\r\n        daejeon:cityData.daejeon,\r\n        sejong:cityData.sejong,\r\n        jeonbuk:cityData.jeonbuk,\r\n        jeonnam:cityData.jeonnam,\r\n        gwangju:cityData.gwangju,\r\n        gyeongbuk:cityData.gyeongbuk,\r\n        daegu:cityData.daegu,\r\n        ulsan:cityData.ulsan,\r\n        gyeongnam:cityData.gyeongnam,\r\n        busan:cityData.busan,\r\n        jeju:cityData.jeju,\r\n        korea:cityData.korea,\r\n        }});\r\n\r\n        setIsLoading(false);\r\n    }\r\n    getData();\r\n    },[]);\r\n    console.log(data)\r\n    const changeTheme = () => {\r\n        setIsDark(!isDark);\r\n    };\r\n\r\n    return (\r\n    <>\r\n    <Router basename=\"/covid19\">\r\n    <ThemeProvider theme={isDark? theme.darkMode : theme.lightMode}>\r\n        <GlobalStyle/>\r\n        <AppStyle>\r\n            <SideBar changeTheme={changeTheme} isDark={isDark}></SideBar>\r\n            {isLoading || !data.koreaData ? \r\n            <Loader\r\n            type=\"Oval\"\r\n            color='#6c757d'\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}\r\n            style={{\r\n                position:\"absolute\",\r\n                top:\"50%\",\r\n                left:\"50%\",\r\n                transform:\"translate(-50%,-50%)\",\r\n            }}\r\n            />: \r\n            (\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <GS.MainContainer>\r\n                        <Domestic koreaData={data.koreaData} cityData={data.cityData} isDark={isDark}></Domestic>\r\n                    </GS.MainContainer>\r\n                </Route>\r\n                <Route exact path=\"/world\">\r\n                    <GS.MainContainer>\r\n                        <World world={world}></World>\r\n                    </GS.MainContainer>\r\n                </Route>\r\n            </Switch>\r\n            )}\r\n        </AppStyle>\r\n    </ThemeProvider>\r\n    </Router>\r\n    </>\r\n);    \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}